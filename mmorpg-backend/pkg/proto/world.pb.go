// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: world.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityType int32

const (
	EntityType_ENTITY_TYPE_UNSPECIFIED EntityType = 0
	EntityType_ENTITY_TYPE_PLAYER      EntityType = 1
	EntityType_ENTITY_TYPE_NPC         EntityType = 2
	EntityType_ENTITY_TYPE_OBJECT      EntityType = 3
	EntityType_ENTITY_TYPE_ITEM        EntityType = 4
	EntityType_ENTITY_TYPE_PROJECTILE  EntityType = 5
)

// Enum value maps for EntityType.
var (
	EntityType_name = map[int32]string{
		0: "ENTITY_TYPE_UNSPECIFIED",
		1: "ENTITY_TYPE_PLAYER",
		2: "ENTITY_TYPE_NPC",
		3: "ENTITY_TYPE_OBJECT",
		4: "ENTITY_TYPE_ITEM",
		5: "ENTITY_TYPE_PROJECTILE",
	}
	EntityType_value = map[string]int32{
		"ENTITY_TYPE_UNSPECIFIED": 0,
		"ENTITY_TYPE_PLAYER":      1,
		"ENTITY_TYPE_NPC":         2,
		"ENTITY_TYPE_OBJECT":      3,
		"ENTITY_TYPE_ITEM":        4,
		"ENTITY_TYPE_PROJECTILE":  5,
	}
)

func (x EntityType) Enum() *EntityType {
	p := new(EntityType)
	*p = x
	return p
}

func (x EntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_world_proto_enumTypes[0].Descriptor()
}

func (EntityType) Type() protoreflect.EnumType {
	return &file_world_proto_enumTypes[0]
}

func (x EntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityType.Descriptor instead.
func (EntityType) EnumDescriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{0}
}

type DamageType int32

const (
	DamageType_DAMAGE_TYPE_UNSPECIFIED DamageType = 0
	DamageType_DAMAGE_TYPE_PHYSICAL    DamageType = 1
	DamageType_DAMAGE_TYPE_MAGICAL     DamageType = 2
	DamageType_DAMAGE_TYPE_FIRE        DamageType = 3
	DamageType_DAMAGE_TYPE_FROST       DamageType = 4
	DamageType_DAMAGE_TYPE_LIGHTNING   DamageType = 5
	DamageType_DAMAGE_TYPE_POISON      DamageType = 6
	DamageType_DAMAGE_TYPE_HOLY        DamageType = 7
	DamageType_DAMAGE_TYPE_SHADOW      DamageType = 8
)

// Enum value maps for DamageType.
var (
	DamageType_name = map[int32]string{
		0: "DAMAGE_TYPE_UNSPECIFIED",
		1: "DAMAGE_TYPE_PHYSICAL",
		2: "DAMAGE_TYPE_MAGICAL",
		3: "DAMAGE_TYPE_FIRE",
		4: "DAMAGE_TYPE_FROST",
		5: "DAMAGE_TYPE_LIGHTNING",
		6: "DAMAGE_TYPE_POISON",
		7: "DAMAGE_TYPE_HOLY",
		8: "DAMAGE_TYPE_SHADOW",
	}
	DamageType_value = map[string]int32{
		"DAMAGE_TYPE_UNSPECIFIED": 0,
		"DAMAGE_TYPE_PHYSICAL":    1,
		"DAMAGE_TYPE_MAGICAL":     2,
		"DAMAGE_TYPE_FIRE":        3,
		"DAMAGE_TYPE_FROST":       4,
		"DAMAGE_TYPE_LIGHTNING":   5,
		"DAMAGE_TYPE_POISON":      6,
		"DAMAGE_TYPE_HOLY":        7,
		"DAMAGE_TYPE_SHADOW":      8,
	}
)

func (x DamageType) Enum() *DamageType {
	p := new(DamageType)
	*p = x
	return p
}

func (x DamageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DamageType) Descriptor() protoreflect.EnumDescriptor {
	return file_world_proto_enumTypes[1].Descriptor()
}

func (DamageType) Type() protoreflect.EnumType {
	return &file_world_proto_enumTypes[1]
}

func (x DamageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DamageType.Descriptor instead.
func (DamageType) EnumDescriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{1}
}

type CombatState int32

const (
	CombatState_COMBAT_STATE_UNSPECIFIED   CombatState = 0
	CombatState_COMBAT_STATE_OUT_OF_COMBAT CombatState = 1
	CombatState_COMBAT_STATE_IN_COMBAT     CombatState = 2
	CombatState_COMBAT_STATE_EVADING       CombatState = 3
	CombatState_COMBAT_STATE_DEAD          CombatState = 4
)

// Enum value maps for CombatState.
var (
	CombatState_name = map[int32]string{
		0: "COMBAT_STATE_UNSPECIFIED",
		1: "COMBAT_STATE_OUT_OF_COMBAT",
		2: "COMBAT_STATE_IN_COMBAT",
		3: "COMBAT_STATE_EVADING",
		4: "COMBAT_STATE_DEAD",
	}
	CombatState_value = map[string]int32{
		"COMBAT_STATE_UNSPECIFIED":   0,
		"COMBAT_STATE_OUT_OF_COMBAT": 1,
		"COMBAT_STATE_IN_COMBAT":     2,
		"COMBAT_STATE_EVADING":       3,
		"COMBAT_STATE_DEAD":          4,
	}
)

func (x CombatState) Enum() *CombatState {
	p := new(CombatState)
	*p = x
	return p
}

func (x CombatState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CombatState) Descriptor() protoreflect.EnumDescriptor {
	return file_world_proto_enumTypes[2].Descriptor()
}

func (CombatState) Type() protoreflect.EnumType {
	return &file_world_proto_enumTypes[2]
}

func (x CombatState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CombatState.Descriptor instead.
func (CombatState) EnumDescriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{2}
}

type NPCBehaviorState int32

const (
	NPCBehaviorState_NPC_BEHAVIOR_UNSPECIFIED NPCBehaviorState = 0
	NPCBehaviorState_NPC_BEHAVIOR_IDLE        NPCBehaviorState = 1
	NPCBehaviorState_NPC_BEHAVIOR_PATROLLING  NPCBehaviorState = 2
	NPCBehaviorState_NPC_BEHAVIOR_CHASING     NPCBehaviorState = 3
	NPCBehaviorState_NPC_BEHAVIOR_ATTACKING   NPCBehaviorState = 4
	NPCBehaviorState_NPC_BEHAVIOR_FLEEING     NPCBehaviorState = 5
	NPCBehaviorState_NPC_BEHAVIOR_RETURNING   NPCBehaviorState = 6
	NPCBehaviorState_NPC_BEHAVIOR_INTERACTING NPCBehaviorState = 7
)

// Enum value maps for NPCBehaviorState.
var (
	NPCBehaviorState_name = map[int32]string{
		0: "NPC_BEHAVIOR_UNSPECIFIED",
		1: "NPC_BEHAVIOR_IDLE",
		2: "NPC_BEHAVIOR_PATROLLING",
		3: "NPC_BEHAVIOR_CHASING",
		4: "NPC_BEHAVIOR_ATTACKING",
		5: "NPC_BEHAVIOR_FLEEING",
		6: "NPC_BEHAVIOR_RETURNING",
		7: "NPC_BEHAVIOR_INTERACTING",
	}
	NPCBehaviorState_value = map[string]int32{
		"NPC_BEHAVIOR_UNSPECIFIED": 0,
		"NPC_BEHAVIOR_IDLE":        1,
		"NPC_BEHAVIOR_PATROLLING":  2,
		"NPC_BEHAVIOR_CHASING":     3,
		"NPC_BEHAVIOR_ATTACKING":   4,
		"NPC_BEHAVIOR_FLEEING":     5,
		"NPC_BEHAVIOR_RETURNING":   6,
		"NPC_BEHAVIOR_INTERACTING": 7,
	}
)

func (x NPCBehaviorState) Enum() *NPCBehaviorState {
	p := new(NPCBehaviorState)
	*p = x
	return p
}

func (x NPCBehaviorState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NPCBehaviorState) Descriptor() protoreflect.EnumDescriptor {
	return file_world_proto_enumTypes[3].Descriptor()
}

func (NPCBehaviorState) Type() protoreflect.EnumType {
	return &file_world_proto_enumTypes[3]
}

func (x NPCBehaviorState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NPCBehaviorState.Descriptor instead.
func (NPCBehaviorState) EnumDescriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{3}
}

// Movement flags (bitfield)
type MovementFlag int32

const (
	MovementFlag_MOVEMENT_FLAG_NONE      MovementFlag = 0
	MovementFlag_MOVEMENT_FLAG_FORWARD   MovementFlag = 1
	MovementFlag_MOVEMENT_FLAG_BACKWARD  MovementFlag = 2
	MovementFlag_MOVEMENT_FLAG_LEFT      MovementFlag = 4
	MovementFlag_MOVEMENT_FLAG_RIGHT     MovementFlag = 8
	MovementFlag_MOVEMENT_FLAG_JUMPING   MovementFlag = 16
	MovementFlag_MOVEMENT_FLAG_FALLING   MovementFlag = 32
	MovementFlag_MOVEMENT_FLAG_SWIMMING  MovementFlag = 64
	MovementFlag_MOVEMENT_FLAG_FLYING    MovementFlag = 128
	MovementFlag_MOVEMENT_FLAG_SPRINTING MovementFlag = 256
	MovementFlag_MOVEMENT_FLAG_SNEAKING  MovementFlag = 512
)

// Enum value maps for MovementFlag.
var (
	MovementFlag_name = map[int32]string{
		0:   "MOVEMENT_FLAG_NONE",
		1:   "MOVEMENT_FLAG_FORWARD",
		2:   "MOVEMENT_FLAG_BACKWARD",
		4:   "MOVEMENT_FLAG_LEFT",
		8:   "MOVEMENT_FLAG_RIGHT",
		16:  "MOVEMENT_FLAG_JUMPING",
		32:  "MOVEMENT_FLAG_FALLING",
		64:  "MOVEMENT_FLAG_SWIMMING",
		128: "MOVEMENT_FLAG_FLYING",
		256: "MOVEMENT_FLAG_SPRINTING",
		512: "MOVEMENT_FLAG_SNEAKING",
	}
	MovementFlag_value = map[string]int32{
		"MOVEMENT_FLAG_NONE":      0,
		"MOVEMENT_FLAG_FORWARD":   1,
		"MOVEMENT_FLAG_BACKWARD":  2,
		"MOVEMENT_FLAG_LEFT":      4,
		"MOVEMENT_FLAG_RIGHT":     8,
		"MOVEMENT_FLAG_JUMPING":   16,
		"MOVEMENT_FLAG_FALLING":   32,
		"MOVEMENT_FLAG_SWIMMING":  64,
		"MOVEMENT_FLAG_FLYING":    128,
		"MOVEMENT_FLAG_SPRINTING": 256,
		"MOVEMENT_FLAG_SNEAKING":  512,
	}
)

func (x MovementFlag) Enum() *MovementFlag {
	p := new(MovementFlag)
	*p = x
	return p
}

func (x MovementFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovementFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_world_proto_enumTypes[4].Descriptor()
}

func (MovementFlag) Type() protoreflect.EnumType {
	return &file_world_proto_enumTypes[4]
}

func (x MovementFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovementFlag.Descriptor instead.
func (MovementFlag) EnumDescriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{4}
}

// Enter world request
type WorldEnterRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CharacterId    string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	WorldToken     string                 `protobuf:"bytes,2,opt,name=world_token,json=worldToken,proto3" json:"world_token,omitempty"`             // Token from character select
	SpawnTransform *Transform             `protobuf:"bytes,3,opt,name=spawn_transform,json=spawnTransform,proto3" json:"spawn_transform,omitempty"` // Where to spawn
	ZoneId         string                 `protobuf:"bytes,4,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorldEnterRequest) Reset() {
	*x = WorldEnterRequest{}
	mi := &file_world_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldEnterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldEnterRequest) ProtoMessage() {}

func (x *WorldEnterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldEnterRequest.ProtoReflect.Descriptor instead.
func (*WorldEnterRequest) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{0}
}

func (x *WorldEnterRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *WorldEnterRequest) GetWorldToken() string {
	if x != nil {
		return x.WorldToken
	}
	return ""
}

func (x *WorldEnterRequest) GetSpawnTransform() *Transform {
	if x != nil {
		return x.SpawnTransform
	}
	return nil
}

func (x *WorldEnterRequest) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

// Enter world response
type WorldEnterResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	PlayerId       string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // Unique player instance ID
	ZoneId         string                 `protobuf:"bytes,3,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	SpawnTransform *Transform             `protobuf:"bytes,4,opt,name=spawn_transform,json=spawnTransform,proto3" json:"spawn_transform,omitempty"`
	ServerTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	TickRate       int32                  `protobuf:"varint,6,opt,name=tick_rate,json=tickRate,proto3" json:"tick_rate,omitempty"` // Server tick rate
	ErrorMessage   string                 `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorCode      ErrorCode              `protobuf:"varint,8,opt,name=error_code,json=errorCode,proto3,enum=mmorpg.ErrorCode" json:"error_code,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorldEnterResponse) Reset() {
	*x = WorldEnterResponse{}
	mi := &file_world_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldEnterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldEnterResponse) ProtoMessage() {}

func (x *WorldEnterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldEnterResponse.ProtoReflect.Descriptor instead.
func (*WorldEnterResponse) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{1}
}

func (x *WorldEnterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WorldEnterResponse) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *WorldEnterResponse) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *WorldEnterResponse) GetSpawnTransform() *Transform {
	if x != nil {
		return x.SpawnTransform
	}
	return nil
}

func (x *WorldEnterResponse) GetServerTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTime
	}
	return nil
}

func (x *WorldEnterResponse) GetTickRate() int32 {
	if x != nil {
		return x.TickRate
	}
	return 0
}

func (x *WorldEnterResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *WorldEnterResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

// Leave world request
type WorldLeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"` // logout, disconnect, zone_change, etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorldLeaveRequest) Reset() {
	*x = WorldLeaveRequest{}
	mi := &file_world_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldLeaveRequest) ProtoMessage() {}

func (x *WorldLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldLeaveRequest.ProtoReflect.Descriptor instead.
func (*WorldLeaveRequest) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{2}
}

func (x *WorldLeaveRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *WorldLeaveRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Leave world response
type WorldLeaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorldLeaveResponse) Reset() {
	*x = WorldLeaveResponse{}
	mi := &file_world_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldLeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldLeaveResponse) ProtoMessage() {}

func (x *WorldLeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldLeaveResponse.ProtoReflect.Descriptor instead.
func (*WorldLeaveResponse) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{3}
}

func (x *WorldLeaveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WorldLeaveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Player position update (client -> server)
type PlayerPositionUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Transform     *Transform             `protobuf:"bytes,2,opt,name=transform,proto3" json:"transform,omitempty"`
	Velocity      *Vector3               `protobuf:"bytes,3,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Acceleration  *Vector3               `protobuf:"bytes,4,opt,name=acceleration,proto3" json:"acceleration,omitempty"`
	MovementFlags uint32                 `protobuf:"varint,5,opt,name=movement_flags,json=movementFlags,proto3" json:"movement_flags,omitempty"` // Walking, running, jumping, etc.
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sequence      uint32                 `protobuf:"varint,7,opt,name=sequence,proto3" json:"sequence,omitempty"` // For lag compensation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerPositionUpdate) Reset() {
	*x = PlayerPositionUpdate{}
	mi := &file_world_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerPositionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPositionUpdate) ProtoMessage() {}

func (x *PlayerPositionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPositionUpdate.ProtoReflect.Descriptor instead.
func (*PlayerPositionUpdate) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerPositionUpdate) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerPositionUpdate) GetTransform() *Transform {
	if x != nil {
		return x.Transform
	}
	return nil
}

func (x *PlayerPositionUpdate) GetVelocity() *Vector3 {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *PlayerPositionUpdate) GetAcceleration() *Vector3 {
	if x != nil {
		return x.Acceleration
	}
	return nil
}

func (x *PlayerPositionUpdate) GetMovementFlags() uint32 {
	if x != nil {
		return x.MovementFlags
	}
	return 0
}

func (x *PlayerPositionUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *PlayerPositionUpdate) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// Area update (server -> client)
type AreaUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Players       []*PlayerState         `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	Npcs          []*NPCState            `protobuf:"bytes,2,rep,name=npcs,proto3" json:"npcs,omitempty"`
	Objects       []*WorldObject         `protobuf:"bytes,3,rep,name=objects,proto3" json:"objects,omitempty"`
	Events        []*EntityEvent         `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
	ServerTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	Tick          uint32                 `protobuf:"varint,6,opt,name=tick,proto3" json:"tick,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AreaUpdate) Reset() {
	*x = AreaUpdate{}
	mi := &file_world_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AreaUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaUpdate) ProtoMessage() {}

func (x *AreaUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaUpdate.ProtoReflect.Descriptor instead.
func (*AreaUpdate) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{5}
}

func (x *AreaUpdate) GetPlayers() []*PlayerState {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *AreaUpdate) GetNpcs() []*NPCState {
	if x != nil {
		return x.Npcs
	}
	return nil
}

func (x *AreaUpdate) GetObjects() []*WorldObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *AreaUpdate) GetEvents() []*EntityEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *AreaUpdate) GetServerTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTime
	}
	return nil
}

func (x *AreaUpdate) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

// Player state in the world
type PlayerState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CharacterName string                 `protobuf:"bytes,2,opt,name=character_name,json=characterName,proto3" json:"character_name,omitempty"`
	Class         CharacterClass         `protobuf:"varint,3,opt,name=class,proto3,enum=mmorpg.CharacterClass" json:"class,omitempty"`
	Level         int32                  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Transform     *Transform             `protobuf:"bytes,5,opt,name=transform,proto3" json:"transform,omitempty"`
	Velocity      *Vector3               `protobuf:"bytes,6,opt,name=velocity,proto3" json:"velocity,omitempty"`
	MovementFlags uint32                 `protobuf:"varint,7,opt,name=movement_flags,json=movementFlags,proto3" json:"movement_flags,omitempty"`
	// Visible stats
	Health    int32 `protobuf:"varint,8,opt,name=health,proto3" json:"health,omitempty"`
	MaxHealth int32 `protobuf:"varint,9,opt,name=max_health,json=maxHealth,proto3" json:"max_health,omitempty"`
	Mana      int32 `protobuf:"varint,10,opt,name=mana,proto3" json:"mana,omitempty"`
	MaxMana   int32 `protobuf:"varint,11,opt,name=max_mana,json=maxMana,proto3" json:"max_mana,omitempty"`
	// Status
	StatusEffects []*StatusEffect `protobuf:"bytes,12,rep,name=status_effects,json=statusEffects,proto3" json:"status_effects,omitempty"`
	CombatState   CombatState     `protobuf:"varint,13,opt,name=combat_state,json=combatState,proto3,enum=mmorpg.CombatState" json:"combat_state,omitempty"`
	// Animation
	CurrentAnimation string  `protobuf:"bytes,14,opt,name=current_animation,json=currentAnimation,proto3" json:"current_animation,omitempty"`
	AnimationTime    float32 `protobuf:"fixed32,15,opt,name=animation_time,json=animationTime,proto3" json:"animation_time,omitempty"`
	// Equipment visibility
	VisibleEquipment map[string]string `protobuf:"bytes,16,rep,name=visible_equipment,json=visibleEquipment,proto3" json:"visible_equipment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PlayerState) Reset() {
	*x = PlayerState{}
	mi := &file_world_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerState) ProtoMessage() {}

func (x *PlayerState) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerState.ProtoReflect.Descriptor instead.
func (*PlayerState) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerState) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerState) GetCharacterName() string {
	if x != nil {
		return x.CharacterName
	}
	return ""
}

func (x *PlayerState) GetClass() CharacterClass {
	if x != nil {
		return x.Class
	}
	return CharacterClass_CHARACTER_CLASS_UNSPECIFIED
}

func (x *PlayerState) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerState) GetTransform() *Transform {
	if x != nil {
		return x.Transform
	}
	return nil
}

func (x *PlayerState) GetVelocity() *Vector3 {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *PlayerState) GetMovementFlags() uint32 {
	if x != nil {
		return x.MovementFlags
	}
	return 0
}

func (x *PlayerState) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *PlayerState) GetMaxHealth() int32 {
	if x != nil {
		return x.MaxHealth
	}
	return 0
}

func (x *PlayerState) GetMana() int32 {
	if x != nil {
		return x.Mana
	}
	return 0
}

func (x *PlayerState) GetMaxMana() int32 {
	if x != nil {
		return x.MaxMana
	}
	return 0
}

func (x *PlayerState) GetStatusEffects() []*StatusEffect {
	if x != nil {
		return x.StatusEffects
	}
	return nil
}

func (x *PlayerState) GetCombatState() CombatState {
	if x != nil {
		return x.CombatState
	}
	return CombatState_COMBAT_STATE_UNSPECIFIED
}

func (x *PlayerState) GetCurrentAnimation() string {
	if x != nil {
		return x.CurrentAnimation
	}
	return ""
}

func (x *PlayerState) GetAnimationTime() float32 {
	if x != nil {
		return x.AnimationTime
	}
	return 0
}

func (x *PlayerState) GetVisibleEquipment() map[string]string {
	if x != nil {
		return x.VisibleEquipment
	}
	return nil
}

// NPC state in the world
type NPCState struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NpcId       string                 `protobuf:"bytes,1,opt,name=npc_id,json=npcId,proto3" json:"npc_id,omitempty"`
	NpcType     string                 `protobuf:"bytes,2,opt,name=npc_type,json=npcType,proto3" json:"npc_type,omitempty"`
	DisplayName string                 `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Transform   *Transform             `protobuf:"bytes,4,opt,name=transform,proto3" json:"transform,omitempty"`
	Velocity    *Vector3               `protobuf:"bytes,5,opt,name=velocity,proto3" json:"velocity,omitempty"`
	// Stats
	Health    int32 `protobuf:"varint,6,opt,name=health,proto3" json:"health,omitempty"`
	MaxHealth int32 `protobuf:"varint,7,opt,name=max_health,json=maxHealth,proto3" json:"max_health,omitempty"`
	Level     int32 `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`
	// Behavior
	BehaviorState NPCBehaviorState `protobuf:"varint,9,opt,name=behavior_state,json=behaviorState,proto3,enum=mmorpg.NPCBehaviorState" json:"behavior_state,omitempty"`
	TargetId      string           `protobuf:"bytes,10,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"` // Current target if any
	// Status
	StatusEffects []*StatusEffect `protobuf:"bytes,11,rep,name=status_effects,json=statusEffects,proto3" json:"status_effects,omitempty"`
	IsHostile     bool            `protobuf:"varint,12,opt,name=is_hostile,json=isHostile,proto3" json:"is_hostile,omitempty"`
	IsQuestGiver  bool            `protobuf:"varint,13,opt,name=is_quest_giver,json=isQuestGiver,proto3" json:"is_quest_giver,omitempty"`
	IsVendor      bool            `protobuf:"varint,14,opt,name=is_vendor,json=isVendor,proto3" json:"is_vendor,omitempty"`
	// Animation
	CurrentAnimation string  `protobuf:"bytes,15,opt,name=current_animation,json=currentAnimation,proto3" json:"current_animation,omitempty"`
	AnimationTime    float32 `protobuf:"fixed32,16,opt,name=animation_time,json=animationTime,proto3" json:"animation_time,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NPCState) Reset() {
	*x = NPCState{}
	mi := &file_world_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NPCState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NPCState) ProtoMessage() {}

func (x *NPCState) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NPCState.ProtoReflect.Descriptor instead.
func (*NPCState) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{7}
}

func (x *NPCState) GetNpcId() string {
	if x != nil {
		return x.NpcId
	}
	return ""
}

func (x *NPCState) GetNpcType() string {
	if x != nil {
		return x.NpcType
	}
	return ""
}

func (x *NPCState) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *NPCState) GetTransform() *Transform {
	if x != nil {
		return x.Transform
	}
	return nil
}

func (x *NPCState) GetVelocity() *Vector3 {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *NPCState) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *NPCState) GetMaxHealth() int32 {
	if x != nil {
		return x.MaxHealth
	}
	return 0
}

func (x *NPCState) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *NPCState) GetBehaviorState() NPCBehaviorState {
	if x != nil {
		return x.BehaviorState
	}
	return NPCBehaviorState_NPC_BEHAVIOR_UNSPECIFIED
}

func (x *NPCState) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *NPCState) GetStatusEffects() []*StatusEffect {
	if x != nil {
		return x.StatusEffects
	}
	return nil
}

func (x *NPCState) GetIsHostile() bool {
	if x != nil {
		return x.IsHostile
	}
	return false
}

func (x *NPCState) GetIsQuestGiver() bool {
	if x != nil {
		return x.IsQuestGiver
	}
	return false
}

func (x *NPCState) GetIsVendor() bool {
	if x != nil {
		return x.IsVendor
	}
	return false
}

func (x *NPCState) GetCurrentAnimation() string {
	if x != nil {
		return x.CurrentAnimation
	}
	return ""
}

func (x *NPCState) GetAnimationTime() float32 {
	if x != nil {
		return x.AnimationTime
	}
	return 0
}

// World object (items, interactables, etc.)
type WorldObject struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	ObjectId   string                 `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	ObjectType string                 `protobuf:"bytes,2,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	Transform  *Transform             `protobuf:"bytes,3,opt,name=transform,proto3" json:"transform,omitempty"`
	// Interaction
	IsInteractable   bool    `protobuf:"varint,4,opt,name=is_interactable,json=isInteractable,proto3" json:"is_interactable,omitempty"`
	InteractionType  string  `protobuf:"bytes,5,opt,name=interaction_type,json=interactionType,proto3" json:"interaction_type,omitempty"`
	InteractionRange float32 `protobuf:"fixed32,6,opt,name=interaction_range,json=interactionRange,proto3" json:"interaction_range,omitempty"`
	// State
	Properties     map[string]string `protobuf:"bytes,7,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IsLootable     bool              `protobuf:"varint,8,opt,name=is_lootable,json=isLootable,proto3" json:"is_lootable,omitempty"`
	AllowedLooters []string          `protobuf:"bytes,9,rep,name=allowed_looters,json=allowedLooters,proto3" json:"allowed_looters,omitempty"` // Player IDs who can loot
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorldObject) Reset() {
	*x = WorldObject{}
	mi := &file_world_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldObject) ProtoMessage() {}

func (x *WorldObject) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldObject.ProtoReflect.Descriptor instead.
func (*WorldObject) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{8}
}

func (x *WorldObject) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *WorldObject) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *WorldObject) GetTransform() *Transform {
	if x != nil {
		return x.Transform
	}
	return nil
}

func (x *WorldObject) GetIsInteractable() bool {
	if x != nil {
		return x.IsInteractable
	}
	return false
}

func (x *WorldObject) GetInteractionType() string {
	if x != nil {
		return x.InteractionType
	}
	return ""
}

func (x *WorldObject) GetInteractionRange() float32 {
	if x != nil {
		return x.InteractionRange
	}
	return 0
}

func (x *WorldObject) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *WorldObject) GetIsLootable() bool {
	if x != nil {
		return x.IsLootable
	}
	return false
}

func (x *WorldObject) GetAllowedLooters() []string {
	if x != nil {
		return x.AllowedLooters
	}
	return nil
}

// Entity spawn event
type EntitySpawn struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Entity:
	//
	//	*EntitySpawn_Player
	//	*EntitySpawn_Npc
	//	*EntitySpawn_Object
	Entity        isEntitySpawn_Entity `protobuf_oneof:"entity"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntitySpawn) Reset() {
	*x = EntitySpawn{}
	mi := &file_world_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntitySpawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySpawn) ProtoMessage() {}

func (x *EntitySpawn) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySpawn.ProtoReflect.Descriptor instead.
func (*EntitySpawn) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{9}
}

func (x *EntitySpawn) GetEntity() isEntitySpawn_Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *EntitySpawn) GetPlayer() *PlayerState {
	if x != nil {
		if x, ok := x.Entity.(*EntitySpawn_Player); ok {
			return x.Player
		}
	}
	return nil
}

func (x *EntitySpawn) GetNpc() *NPCState {
	if x != nil {
		if x, ok := x.Entity.(*EntitySpawn_Npc); ok {
			return x.Npc
		}
	}
	return nil
}

func (x *EntitySpawn) GetObject() *WorldObject {
	if x != nil {
		if x, ok := x.Entity.(*EntitySpawn_Object); ok {
			return x.Object
		}
	}
	return nil
}

type isEntitySpawn_Entity interface {
	isEntitySpawn_Entity()
}

type EntitySpawn_Player struct {
	Player *PlayerState `protobuf:"bytes,1,opt,name=player,proto3,oneof"`
}

type EntitySpawn_Npc struct {
	Npc *NPCState `protobuf:"bytes,2,opt,name=npc,proto3,oneof"`
}

type EntitySpawn_Object struct {
	Object *WorldObject `protobuf:"bytes,3,opt,name=object,proto3,oneof"`
}

func (*EntitySpawn_Player) isEntitySpawn_Entity() {}

func (*EntitySpawn_Npc) isEntitySpawn_Entity() {}

func (*EntitySpawn_Object) isEntitySpawn_Entity() {}

// Entity despawn event
type EntityDespawn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EntityType    EntityType             `protobuf:"varint,2,opt,name=entity_type,json=entityType,proto3,enum=mmorpg.EntityType" json:"entity_type,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"` // death, logout, out_of_range, etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityDespawn) Reset() {
	*x = EntityDespawn{}
	mi := &file_world_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityDespawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityDespawn) ProtoMessage() {}

func (x *EntityDespawn) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityDespawn.ProtoReflect.Descriptor instead.
func (*EntityDespawn) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{10}
}

func (x *EntityDespawn) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EntityDespawn) GetEntityType() EntityType {
	if x != nil {
		return x.EntityType
	}
	return EntityType_ENTITY_TYPE_UNSPECIFIED
}

func (x *EntityDespawn) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Entity events
type EntityEvent struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	EntityId  string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EventType string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to EventData:
	//
	//	*EntityEvent_Damage
	//	*EntityEvent_Heal
	//	*EntityEvent_Death
	//	*EntityEvent_LevelUp
	//	*EntityEvent_Emote
	//	*EntityEvent_Sound
	//	*EntityEvent_VisualEffect
	EventData     isEntityEvent_EventData `protobuf_oneof:"event_data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityEvent) Reset() {
	*x = EntityEvent{}
	mi := &file_world_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityEvent) ProtoMessage() {}

func (x *EntityEvent) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityEvent.ProtoReflect.Descriptor instead.
func (*EntityEvent) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{11}
}

func (x *EntityEvent) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EntityEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *EntityEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityEvent) GetEventData() isEntityEvent_EventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *EntityEvent) GetDamage() *DamageEvent {
	if x != nil {
		if x, ok := x.EventData.(*EntityEvent_Damage); ok {
			return x.Damage
		}
	}
	return nil
}

func (x *EntityEvent) GetHeal() *HealEvent {
	if x != nil {
		if x, ok := x.EventData.(*EntityEvent_Heal); ok {
			return x.Heal
		}
	}
	return nil
}

func (x *EntityEvent) GetDeath() *DeathEvent {
	if x != nil {
		if x, ok := x.EventData.(*EntityEvent_Death); ok {
			return x.Death
		}
	}
	return nil
}

func (x *EntityEvent) GetLevelUp() *LevelUpEvent {
	if x != nil {
		if x, ok := x.EventData.(*EntityEvent_LevelUp); ok {
			return x.LevelUp
		}
	}
	return nil
}

func (x *EntityEvent) GetEmote() *EmoteEvent {
	if x != nil {
		if x, ok := x.EventData.(*EntityEvent_Emote); ok {
			return x.Emote
		}
	}
	return nil
}

func (x *EntityEvent) GetSound() *SoundEvent {
	if x != nil {
		if x, ok := x.EventData.(*EntityEvent_Sound); ok {
			return x.Sound
		}
	}
	return nil
}

func (x *EntityEvent) GetVisualEffect() *VisualEffectEvent {
	if x != nil {
		if x, ok := x.EventData.(*EntityEvent_VisualEffect); ok {
			return x.VisualEffect
		}
	}
	return nil
}

type isEntityEvent_EventData interface {
	isEntityEvent_EventData()
}

type EntityEvent_Damage struct {
	Damage *DamageEvent `protobuf:"bytes,4,opt,name=damage,proto3,oneof"`
}

type EntityEvent_Heal struct {
	Heal *HealEvent `protobuf:"bytes,5,opt,name=heal,proto3,oneof"`
}

type EntityEvent_Death struct {
	Death *DeathEvent `protobuf:"bytes,6,opt,name=death,proto3,oneof"`
}

type EntityEvent_LevelUp struct {
	LevelUp *LevelUpEvent `protobuf:"bytes,7,opt,name=level_up,json=levelUp,proto3,oneof"`
}

type EntityEvent_Emote struct {
	Emote *EmoteEvent `protobuf:"bytes,8,opt,name=emote,proto3,oneof"`
}

type EntityEvent_Sound struct {
	Sound *SoundEvent `protobuf:"bytes,9,opt,name=sound,proto3,oneof"`
}

type EntityEvent_VisualEffect struct {
	VisualEffect *VisualEffectEvent `protobuf:"bytes,10,opt,name=visual_effect,json=visualEffect,proto3,oneof"`
}

func (*EntityEvent_Damage) isEntityEvent_EventData() {}

func (*EntityEvent_Heal) isEntityEvent_EventData() {}

func (*EntityEvent_Death) isEntityEvent_EventData() {}

func (*EntityEvent_LevelUp) isEntityEvent_EventData() {}

func (*EntityEvent_Emote) isEntityEvent_EventData() {}

func (*EntityEvent_Sound) isEntityEvent_EventData() {}

func (*EntityEvent_VisualEffect) isEntityEvent_EventData() {}

// Damage event
type DamageEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceId      string                 `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Damage        int32                  `protobuf:"varint,3,opt,name=damage,proto3" json:"damage,omitempty"`
	DamageType    DamageType             `protobuf:"varint,4,opt,name=damage_type,json=damageType,proto3,enum=mmorpg.DamageType" json:"damage_type,omitempty"`
	IsCritical    bool                   `protobuf:"varint,5,opt,name=is_critical,json=isCritical,proto3" json:"is_critical,omitempty"`
	IsBlocked     bool                   `protobuf:"varint,6,opt,name=is_blocked,json=isBlocked,proto3" json:"is_blocked,omitempty"`
	IsDodged      bool                   `protobuf:"varint,7,opt,name=is_dodged,json=isDodged,proto3" json:"is_dodged,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DamageEvent) Reset() {
	*x = DamageEvent{}
	mi := &file_world_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DamageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DamageEvent) ProtoMessage() {}

func (x *DamageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DamageEvent.ProtoReflect.Descriptor instead.
func (*DamageEvent) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{12}
}

func (x *DamageEvent) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *DamageEvent) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *DamageEvent) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *DamageEvent) GetDamageType() DamageType {
	if x != nil {
		return x.DamageType
	}
	return DamageType_DAMAGE_TYPE_UNSPECIFIED
}

func (x *DamageEvent) GetIsCritical() bool {
	if x != nil {
		return x.IsCritical
	}
	return false
}

func (x *DamageEvent) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *DamageEvent) GetIsDodged() bool {
	if x != nil {
		return x.IsDodged
	}
	return false
}

// Heal event
type HealEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceId      string                 `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	HealAmount    int32                  `protobuf:"varint,3,opt,name=heal_amount,json=healAmount,proto3" json:"heal_amount,omitempty"`
	HealType      string                 `protobuf:"bytes,4,opt,name=heal_type,json=healType,proto3" json:"heal_type,omitempty"` // spell, potion, regen, etc.
	IsCritical    bool                   `protobuf:"varint,5,opt,name=is_critical,json=isCritical,proto3" json:"is_critical,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealEvent) Reset() {
	*x = HealEvent{}
	mi := &file_world_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealEvent) ProtoMessage() {}

func (x *HealEvent) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealEvent.ProtoReflect.Descriptor instead.
func (*HealEvent) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{13}
}

func (x *HealEvent) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *HealEvent) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *HealEvent) GetHealAmount() int32 {
	if x != nil {
		return x.HealAmount
	}
	return 0
}

func (x *HealEvent) GetHealType() string {
	if x != nil {
		return x.HealType
	}
	return ""
}

func (x *HealEvent) GetIsCritical() bool {
	if x != nil {
		return x.IsCritical
	}
	return false
}

// Death event
type DeathEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	KillerId      string                 `protobuf:"bytes,2,opt,name=killer_id,json=killerId,proto3" json:"killer_id,omitempty"`
	DeathType     string                 `protobuf:"bytes,3,opt,name=death_type,json=deathType,proto3" json:"death_type,omitempty"` // combat, fall, drowning, etc.
	DeathLocation *Transform             `protobuf:"bytes,4,opt,name=death_location,json=deathLocation,proto3" json:"death_location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeathEvent) Reset() {
	*x = DeathEvent{}
	mi := &file_world_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeathEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeathEvent) ProtoMessage() {}

func (x *DeathEvent) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeathEvent.ProtoReflect.Descriptor instead.
func (*DeathEvent) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{14}
}

func (x *DeathEvent) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *DeathEvent) GetKillerId() string {
	if x != nil {
		return x.KillerId
	}
	return ""
}

func (x *DeathEvent) GetDeathType() string {
	if x != nil {
		return x.DeathType
	}
	return ""
}

func (x *DeathEvent) GetDeathLocation() *Transform {
	if x != nil {
		return x.DeathLocation
	}
	return nil
}

// Level up event
type LevelUpEvent struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PlayerId          string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	NewLevel          int32                  `protobuf:"varint,2,opt,name=new_level,json=newLevel,proto3" json:"new_level,omitempty"`
	StatPointsGained  int32                  `protobuf:"varint,3,opt,name=stat_points_gained,json=statPointsGained,proto3" json:"stat_points_gained,omitempty"`
	SkillPointsGained int32                  `protobuf:"varint,4,opt,name=skill_points_gained,json=skillPointsGained,proto3" json:"skill_points_gained,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LevelUpEvent) Reset() {
	*x = LevelUpEvent{}
	mi := &file_world_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LevelUpEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpEvent) ProtoMessage() {}

func (x *LevelUpEvent) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpEvent.ProtoReflect.Descriptor instead.
func (*LevelUpEvent) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{15}
}

func (x *LevelUpEvent) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *LevelUpEvent) GetNewLevel() int32 {
	if x != nil {
		return x.NewLevel
	}
	return 0
}

func (x *LevelUpEvent) GetStatPointsGained() int32 {
	if x != nil {
		return x.StatPointsGained
	}
	return 0
}

func (x *LevelUpEvent) GetSkillPointsGained() int32 {
	if x != nil {
		return x.SkillPointsGained
	}
	return 0
}

// Emote event
type EmoteEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EmoteId       string                 `protobuf:"bytes,2,opt,name=emote_id,json=emoteId,proto3" json:"emote_id,omitempty"`
	TargetId      string                 `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"` // Optional target
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmoteEvent) Reset() {
	*x = EmoteEvent{}
	mi := &file_world_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmoteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoteEvent) ProtoMessage() {}

func (x *EmoteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoteEvent.ProtoReflect.Descriptor instead.
func (*EmoteEvent) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{16}
}

func (x *EmoteEvent) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EmoteEvent) GetEmoteId() string {
	if x != nil {
		return x.EmoteId
	}
	return ""
}

func (x *EmoteEvent) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

// Sound event
type SoundEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SoundId       string                 `protobuf:"bytes,1,opt,name=sound_id,json=soundId,proto3" json:"sound_id,omitempty"`
	Location      *Transform             `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Volume        float32                `protobuf:"fixed32,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Range         float32                `protobuf:"fixed32,4,opt,name=range,proto3" json:"range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SoundEvent) Reset() {
	*x = SoundEvent{}
	mi := &file_world_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoundEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundEvent) ProtoMessage() {}

func (x *SoundEvent) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundEvent.ProtoReflect.Descriptor instead.
func (*SoundEvent) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{17}
}

func (x *SoundEvent) GetSoundId() string {
	if x != nil {
		return x.SoundId
	}
	return ""
}

func (x *SoundEvent) GetLocation() *Transform {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *SoundEvent) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *SoundEvent) GetRange() float32 {
	if x != nil {
		return x.Range
	}
	return 0
}

// Visual effect event
type VisualEffectEvent struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EffectId       string                 `protobuf:"bytes,1,opt,name=effect_id,json=effectId,proto3" json:"effect_id,omitempty"`
	Location       *Transform             `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Duration       float32                `protobuf:"fixed32,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Scale          float32                `protobuf:"fixed32,4,opt,name=scale,proto3" json:"scale,omitempty"`
	AttachToEntity string                 `protobuf:"bytes,5,opt,name=attach_to_entity,json=attachToEntity,proto3" json:"attach_to_entity,omitempty"` // Optional entity to attach to
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VisualEffectEvent) Reset() {
	*x = VisualEffectEvent{}
	mi := &file_world_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VisualEffectEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisualEffectEvent) ProtoMessage() {}

func (x *VisualEffectEvent) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisualEffectEvent.ProtoReflect.Descriptor instead.
func (*VisualEffectEvent) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{18}
}

func (x *VisualEffectEvent) GetEffectId() string {
	if x != nil {
		return x.EffectId
	}
	return ""
}

func (x *VisualEffectEvent) GetLocation() *Transform {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *VisualEffectEvent) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VisualEffectEvent) GetScale() float32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *VisualEffectEvent) GetAttachToEntity() string {
	if x != nil {
		return x.AttachToEntity
	}
	return ""
}

// Status effect
type StatusEffect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EffectId      string                 `protobuf:"bytes,1,opt,name=effect_id,json=effectId,proto3" json:"effect_id,omitempty"`
	EffectType    string                 `protobuf:"bytes,2,opt,name=effect_type,json=effectType,proto3" json:"effect_type,omitempty"`
	IconId        string                 `protobuf:"bytes,3,opt,name=icon_id,json=iconId,proto3" json:"icon_id,omitempty"`
	Duration      float32                `protobuf:"fixed32,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Stacks        int32                  `protobuf:"varint,5,opt,name=stacks,proto3" json:"stacks,omitempty"`
	SourceId      string                 `protobuf:"bytes,6,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusEffect) Reset() {
	*x = StatusEffect{}
	mi := &file_world_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusEffect) ProtoMessage() {}

func (x *StatusEffect) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusEffect.ProtoReflect.Descriptor instead.
func (*StatusEffect) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{19}
}

func (x *StatusEffect) GetEffectId() string {
	if x != nil {
		return x.EffectId
	}
	return ""
}

func (x *StatusEffect) GetEffectType() string {
	if x != nil {
		return x.EffectType
	}
	return ""
}

func (x *StatusEffect) GetIconId() string {
	if x != nil {
		return x.IconId
	}
	return ""
}

func (x *StatusEffect) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *StatusEffect) GetStacks() int32 {
	if x != nil {
		return x.Stacks
	}
	return 0
}

func (x *StatusEffect) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

// Zone change request
type ZoneChangeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlayerId        string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	TargetZoneId    string                 `protobuf:"bytes,2,opt,name=target_zone_id,json=targetZoneId,proto3" json:"target_zone_id,omitempty"`
	TargetTransform *Transform             `protobuf:"bytes,3,opt,name=target_transform,json=targetTransform,proto3" json:"target_transform,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ZoneChangeRequest) Reset() {
	*x = ZoneChangeRequest{}
	mi := &file_world_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneChangeRequest) ProtoMessage() {}

func (x *ZoneChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneChangeRequest.ProtoReflect.Descriptor instead.
func (*ZoneChangeRequest) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{20}
}

func (x *ZoneChangeRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ZoneChangeRequest) GetTargetZoneId() string {
	if x != nil {
		return x.TargetZoneId
	}
	return ""
}

func (x *ZoneChangeRequest) GetTargetTransform() *Transform {
	if x != nil {
		return x.TargetTransform
	}
	return nil
}

// Zone change response
type ZoneChangeResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	NewZoneId      string                 `protobuf:"bytes,2,opt,name=new_zone_id,json=newZoneId,proto3" json:"new_zone_id,omitempty"`
	WorldServerUrl string                 `protobuf:"bytes,3,opt,name=world_server_url,json=worldServerUrl,proto3" json:"world_server_url,omitempty"` // If changing servers
	WorldToken     string                 `protobuf:"bytes,4,opt,name=world_token,json=worldToken,proto3" json:"world_token,omitempty"`               // New token if changing servers
	SpawnTransform *Transform             `protobuf:"bytes,5,opt,name=spawn_transform,json=spawnTransform,proto3" json:"spawn_transform,omitempty"`
	ErrorMessage   string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorCode      ErrorCode              `protobuf:"varint,7,opt,name=error_code,json=errorCode,proto3,enum=mmorpg.ErrorCode" json:"error_code,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ZoneChangeResponse) Reset() {
	*x = ZoneChangeResponse{}
	mi := &file_world_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneChangeResponse) ProtoMessage() {}

func (x *ZoneChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneChangeResponse.ProtoReflect.Descriptor instead.
func (*ZoneChangeResponse) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{21}
}

func (x *ZoneChangeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ZoneChangeResponse) GetNewZoneId() string {
	if x != nil {
		return x.NewZoneId
	}
	return ""
}

func (x *ZoneChangeResponse) GetWorldServerUrl() string {
	if x != nil {
		return x.WorldServerUrl
	}
	return ""
}

func (x *ZoneChangeResponse) GetWorldToken() string {
	if x != nil {
		return x.WorldToken
	}
	return ""
}

func (x *ZoneChangeResponse) GetSpawnTransform() *Transform {
	if x != nil {
		return x.SpawnTransform
	}
	return nil
}

func (x *ZoneChangeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ZoneChangeResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

// Interest management request
type InterestUpdateRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlayerId        string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ViewDistance    float32                `protobuf:"fixed32,2,opt,name=view_distance,json=viewDistance,proto3" json:"view_distance,omitempty"`
	InterestFilters []string               `protobuf:"bytes,3,rep,name=interest_filters,json=interestFilters,proto3" json:"interest_filters,omitempty"` // Types of entities to include
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InterestUpdateRequest) Reset() {
	*x = InterestUpdateRequest{}
	mi := &file_world_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterestUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestUpdateRequest) ProtoMessage() {}

func (x *InterestUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestUpdateRequest.ProtoReflect.Descriptor instead.
func (*InterestUpdateRequest) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{22}
}

func (x *InterestUpdateRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *InterestUpdateRequest) GetViewDistance() float32 {
	if x != nil {
		return x.ViewDistance
	}
	return 0
}

func (x *InterestUpdateRequest) GetInterestFilters() []string {
	if x != nil {
		return x.InterestFilters
	}
	return nil
}

var File_world_proto protoreflect.FileDescriptor

const file_world_proto_rawDesc = "" +
	"\n" +
	"\vworld.proto\x12\x06mmorpg\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\n" +
	"base.proto\x1a\x0fcharacter.proto\"\xac\x01\n" +
	"\x11WorldEnterRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\tR\vcharacterId\x12\x1f\n" +
	"\vworld_token\x18\x02 \x01(\tR\n" +
	"worldToken\x12:\n" +
	"\x0fspawn_transform\x18\x03 \x01(\v2\x11.mmorpg.TransformR\x0espawnTransform\x12\x17\n" +
	"\azone_id\x18\x04 \x01(\tR\x06zoneId\"\xd1\x02\n" +
	"\x12WorldEnterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12\x17\n" +
	"\azone_id\x18\x03 \x01(\tR\x06zoneId\x12:\n" +
	"\x0fspawn_transform\x18\x04 \x01(\v2\x11.mmorpg.TransformR\x0espawnTransform\x12;\n" +
	"\vserver_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"serverTime\x12\x1b\n" +
	"\ttick_rate\x18\x06 \x01(\x05R\btickRate\x12#\n" +
	"\rerror_message\x18\a \x01(\tR\ferrorMessage\x120\n" +
	"\n" +
	"error_code\x18\b \x01(\x0e2\x11.mmorpg.ErrorCodeR\terrorCode\"H\n" +
	"\x11WorldLeaveRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"H\n" +
	"\x12WorldLeaveResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xc3\x02\n" +
	"\x14PlayerPositionUpdate\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12/\n" +
	"\ttransform\x18\x02 \x01(\v2\x11.mmorpg.TransformR\ttransform\x12+\n" +
	"\bvelocity\x18\x03 \x01(\v2\x0f.mmorpg.Vector3R\bvelocity\x123\n" +
	"\facceleration\x18\x04 \x01(\v2\x0f.mmorpg.Vector3R\facceleration\x12%\n" +
	"\x0emovement_flags\x18\x05 \x01(\rR\rmovementFlags\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1a\n" +
	"\bsequence\x18\a \x01(\rR\bsequence\"\x8e\x02\n" +
	"\n" +
	"AreaUpdate\x12-\n" +
	"\aplayers\x18\x01 \x03(\v2\x13.mmorpg.PlayerStateR\aplayers\x12$\n" +
	"\x04npcs\x18\x02 \x03(\v2\x10.mmorpg.NPCStateR\x04npcs\x12-\n" +
	"\aobjects\x18\x03 \x03(\v2\x13.mmorpg.WorldObjectR\aobjects\x12+\n" +
	"\x06events\x18\x04 \x03(\v2\x13.mmorpg.EntityEventR\x06events\x12;\n" +
	"\vserver_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"serverTime\x12\x12\n" +
	"\x04tick\x18\x06 \x01(\rR\x04tick\"\xe6\x05\n" +
	"\vPlayerState\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12%\n" +
	"\x0echaracter_name\x18\x02 \x01(\tR\rcharacterName\x12,\n" +
	"\x05class\x18\x03 \x01(\x0e2\x16.mmorpg.CharacterClassR\x05class\x12\x14\n" +
	"\x05level\x18\x04 \x01(\x05R\x05level\x12/\n" +
	"\ttransform\x18\x05 \x01(\v2\x11.mmorpg.TransformR\ttransform\x12+\n" +
	"\bvelocity\x18\x06 \x01(\v2\x0f.mmorpg.Vector3R\bvelocity\x12%\n" +
	"\x0emovement_flags\x18\a \x01(\rR\rmovementFlags\x12\x16\n" +
	"\x06health\x18\b \x01(\x05R\x06health\x12\x1d\n" +
	"\n" +
	"max_health\x18\t \x01(\x05R\tmaxHealth\x12\x12\n" +
	"\x04mana\x18\n" +
	" \x01(\x05R\x04mana\x12\x19\n" +
	"\bmax_mana\x18\v \x01(\x05R\amaxMana\x12;\n" +
	"\x0estatus_effects\x18\f \x03(\v2\x14.mmorpg.StatusEffectR\rstatusEffects\x126\n" +
	"\fcombat_state\x18\r \x01(\x0e2\x13.mmorpg.CombatStateR\vcombatState\x12+\n" +
	"\x11current_animation\x18\x0e \x01(\tR\x10currentAnimation\x12%\n" +
	"\x0eanimation_time\x18\x0f \x01(\x02R\ranimationTime\x12V\n" +
	"\x11visible_equipment\x18\x10 \x03(\v2).mmorpg.PlayerState.VisibleEquipmentEntryR\x10visibleEquipment\x1aC\n" +
	"\x15VisibleEquipmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdb\x04\n" +
	"\bNPCState\x12\x15\n" +
	"\x06npc_id\x18\x01 \x01(\tR\x05npcId\x12\x19\n" +
	"\bnpc_type\x18\x02 \x01(\tR\anpcType\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12/\n" +
	"\ttransform\x18\x04 \x01(\v2\x11.mmorpg.TransformR\ttransform\x12+\n" +
	"\bvelocity\x18\x05 \x01(\v2\x0f.mmorpg.Vector3R\bvelocity\x12\x16\n" +
	"\x06health\x18\x06 \x01(\x05R\x06health\x12\x1d\n" +
	"\n" +
	"max_health\x18\a \x01(\x05R\tmaxHealth\x12\x14\n" +
	"\x05level\x18\b \x01(\x05R\x05level\x12?\n" +
	"\x0ebehavior_state\x18\t \x01(\x0e2\x18.mmorpg.NPCBehaviorStateR\rbehaviorState\x12\x1b\n" +
	"\ttarget_id\x18\n" +
	" \x01(\tR\btargetId\x12;\n" +
	"\x0estatus_effects\x18\v \x03(\v2\x14.mmorpg.StatusEffectR\rstatusEffects\x12\x1d\n" +
	"\n" +
	"is_hostile\x18\f \x01(\bR\tisHostile\x12$\n" +
	"\x0eis_quest_giver\x18\r \x01(\bR\fisQuestGiver\x12\x1b\n" +
	"\tis_vendor\x18\x0e \x01(\bR\bisVendor\x12+\n" +
	"\x11current_animation\x18\x0f \x01(\tR\x10currentAnimation\x12%\n" +
	"\x0eanimation_time\x18\x10 \x01(\x02R\ranimationTime\"\xcb\x03\n" +
	"\vWorldObject\x12\x1b\n" +
	"\tobject_id\x18\x01 \x01(\tR\bobjectId\x12\x1f\n" +
	"\vobject_type\x18\x02 \x01(\tR\n" +
	"objectType\x12/\n" +
	"\ttransform\x18\x03 \x01(\v2\x11.mmorpg.TransformR\ttransform\x12'\n" +
	"\x0fis_interactable\x18\x04 \x01(\bR\x0eisInteractable\x12)\n" +
	"\x10interaction_type\x18\x05 \x01(\tR\x0finteractionType\x12+\n" +
	"\x11interaction_range\x18\x06 \x01(\x02R\x10interactionRange\x12C\n" +
	"\n" +
	"properties\x18\a \x03(\v2#.mmorpg.WorldObject.PropertiesEntryR\n" +
	"properties\x12\x1f\n" +
	"\vis_lootable\x18\b \x01(\bR\n" +
	"isLootable\x12'\n" +
	"\x0fallowed_looters\x18\t \x03(\tR\x0eallowedLooters\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9b\x01\n" +
	"\vEntitySpawn\x12-\n" +
	"\x06player\x18\x01 \x01(\v2\x13.mmorpg.PlayerStateH\x00R\x06player\x12$\n" +
	"\x03npc\x18\x02 \x01(\v2\x10.mmorpg.NPCStateH\x00R\x03npc\x12-\n" +
	"\x06object\x18\x03 \x01(\v2\x13.mmorpg.WorldObjectH\x00R\x06objectB\b\n" +
	"\x06entity\"y\n" +
	"\rEntityDespawn\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x123\n" +
	"\ventity_type\x18\x02 \x01(\x0e2\x12.mmorpg.EntityTypeR\n" +
	"entityType\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\xe2\x03\n" +
	"\vEntityEvent\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12-\n" +
	"\x06damage\x18\x04 \x01(\v2\x13.mmorpg.DamageEventH\x00R\x06damage\x12'\n" +
	"\x04heal\x18\x05 \x01(\v2\x11.mmorpg.HealEventH\x00R\x04heal\x12*\n" +
	"\x05death\x18\x06 \x01(\v2\x12.mmorpg.DeathEventH\x00R\x05death\x121\n" +
	"\blevel_up\x18\a \x01(\v2\x14.mmorpg.LevelUpEventH\x00R\alevelUp\x12*\n" +
	"\x05emote\x18\b \x01(\v2\x12.mmorpg.EmoteEventH\x00R\x05emote\x12*\n" +
	"\x05sound\x18\t \x01(\v2\x12.mmorpg.SoundEventH\x00R\x05sound\x12@\n" +
	"\rvisual_effect\x18\n" +
	" \x01(\v2\x19.mmorpg.VisualEffectEventH\x00R\fvisualEffectB\f\n" +
	"\n" +
	"event_data\"\xf1\x01\n" +
	"\vDamageEvent\x12\x1b\n" +
	"\tsource_id\x18\x01 \x01(\tR\bsourceId\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\tR\btargetId\x12\x16\n" +
	"\x06damage\x18\x03 \x01(\x05R\x06damage\x123\n" +
	"\vdamage_type\x18\x04 \x01(\x0e2\x12.mmorpg.DamageTypeR\n" +
	"damageType\x12\x1f\n" +
	"\vis_critical\x18\x05 \x01(\bR\n" +
	"isCritical\x12\x1d\n" +
	"\n" +
	"is_blocked\x18\x06 \x01(\bR\tisBlocked\x12\x1b\n" +
	"\tis_dodged\x18\a \x01(\bR\bisDodged\"\xa4\x01\n" +
	"\tHealEvent\x12\x1b\n" +
	"\tsource_id\x18\x01 \x01(\tR\bsourceId\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\tR\btargetId\x12\x1f\n" +
	"\vheal_amount\x18\x03 \x01(\x05R\n" +
	"healAmount\x12\x1b\n" +
	"\theal_type\x18\x04 \x01(\tR\bhealType\x12\x1f\n" +
	"\vis_critical\x18\x05 \x01(\bR\n" +
	"isCritical\"\x9f\x01\n" +
	"\n" +
	"DeathEvent\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x12\x1b\n" +
	"\tkiller_id\x18\x02 \x01(\tR\bkillerId\x12\x1d\n" +
	"\n" +
	"death_type\x18\x03 \x01(\tR\tdeathType\x128\n" +
	"\x0edeath_location\x18\x04 \x01(\v2\x11.mmorpg.TransformR\rdeathLocation\"\xa6\x01\n" +
	"\fLevelUpEvent\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1b\n" +
	"\tnew_level\x18\x02 \x01(\x05R\bnewLevel\x12,\n" +
	"\x12stat_points_gained\x18\x03 \x01(\x05R\x10statPointsGained\x12.\n" +
	"\x13skill_points_gained\x18\x04 \x01(\x05R\x11skillPointsGained\"a\n" +
	"\n" +
	"EmoteEvent\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x12\x19\n" +
	"\bemote_id\x18\x02 \x01(\tR\aemoteId\x12\x1b\n" +
	"\ttarget_id\x18\x03 \x01(\tR\btargetId\"\x84\x01\n" +
	"\n" +
	"SoundEvent\x12\x19\n" +
	"\bsound_id\x18\x01 \x01(\tR\asoundId\x12-\n" +
	"\blocation\x18\x02 \x01(\v2\x11.mmorpg.TransformR\blocation\x12\x16\n" +
	"\x06volume\x18\x03 \x01(\x02R\x06volume\x12\x14\n" +
	"\x05range\x18\x04 \x01(\x02R\x05range\"\xbb\x01\n" +
	"\x11VisualEffectEvent\x12\x1b\n" +
	"\teffect_id\x18\x01 \x01(\tR\beffectId\x12-\n" +
	"\blocation\x18\x02 \x01(\v2\x11.mmorpg.TransformR\blocation\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x02R\bduration\x12\x14\n" +
	"\x05scale\x18\x04 \x01(\x02R\x05scale\x12(\n" +
	"\x10attach_to_entity\x18\x05 \x01(\tR\x0eattachToEntity\"\xb6\x01\n" +
	"\fStatusEffect\x12\x1b\n" +
	"\teffect_id\x18\x01 \x01(\tR\beffectId\x12\x1f\n" +
	"\veffect_type\x18\x02 \x01(\tR\n" +
	"effectType\x12\x17\n" +
	"\aicon_id\x18\x03 \x01(\tR\x06iconId\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x02R\bduration\x12\x16\n" +
	"\x06stacks\x18\x05 \x01(\x05R\x06stacks\x12\x1b\n" +
	"\tsource_id\x18\x06 \x01(\tR\bsourceId\"\x94\x01\n" +
	"\x11ZoneChangeRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12$\n" +
	"\x0etarget_zone_id\x18\x02 \x01(\tR\ftargetZoneId\x12<\n" +
	"\x10target_transform\x18\x03 \x01(\v2\x11.mmorpg.TransformR\x0ftargetTransform\"\xac\x02\n" +
	"\x12ZoneChangeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1e\n" +
	"\vnew_zone_id\x18\x02 \x01(\tR\tnewZoneId\x12(\n" +
	"\x10world_server_url\x18\x03 \x01(\tR\x0eworldServerUrl\x12\x1f\n" +
	"\vworld_token\x18\x04 \x01(\tR\n" +
	"worldToken\x12:\n" +
	"\x0fspawn_transform\x18\x05 \x01(\v2\x11.mmorpg.TransformR\x0espawnTransform\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x120\n" +
	"\n" +
	"error_code\x18\a \x01(\x0e2\x11.mmorpg.ErrorCodeR\terrorCode\"\x84\x01\n" +
	"\x15InterestUpdateRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12#\n" +
	"\rview_distance\x18\x02 \x01(\x02R\fviewDistance\x12)\n" +
	"\x10interest_filters\x18\x03 \x03(\tR\x0finterestFilters*\xa0\x01\n" +
	"\n" +
	"EntityType\x12\x1b\n" +
	"\x17ENTITY_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12ENTITY_TYPE_PLAYER\x10\x01\x12\x13\n" +
	"\x0fENTITY_TYPE_NPC\x10\x02\x12\x16\n" +
	"\x12ENTITY_TYPE_OBJECT\x10\x03\x12\x14\n" +
	"\x10ENTITY_TYPE_ITEM\x10\x04\x12\x1a\n" +
	"\x16ENTITY_TYPE_PROJECTILE\x10\x05*\xea\x01\n" +
	"\n" +
	"DamageType\x12\x1b\n" +
	"\x17DAMAGE_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14DAMAGE_TYPE_PHYSICAL\x10\x01\x12\x17\n" +
	"\x13DAMAGE_TYPE_MAGICAL\x10\x02\x12\x14\n" +
	"\x10DAMAGE_TYPE_FIRE\x10\x03\x12\x15\n" +
	"\x11DAMAGE_TYPE_FROST\x10\x04\x12\x19\n" +
	"\x15DAMAGE_TYPE_LIGHTNING\x10\x05\x12\x16\n" +
	"\x12DAMAGE_TYPE_POISON\x10\x06\x12\x14\n" +
	"\x10DAMAGE_TYPE_HOLY\x10\a\x12\x16\n" +
	"\x12DAMAGE_TYPE_SHADOW\x10\b*\x98\x01\n" +
	"\vCombatState\x12\x1c\n" +
	"\x18COMBAT_STATE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aCOMBAT_STATE_OUT_OF_COMBAT\x10\x01\x12\x1a\n" +
	"\x16COMBAT_STATE_IN_COMBAT\x10\x02\x12\x18\n" +
	"\x14COMBAT_STATE_EVADING\x10\x03\x12\x15\n" +
	"\x11COMBAT_STATE_DEAD\x10\x04*\xee\x01\n" +
	"\x10NPCBehaviorState\x12\x1c\n" +
	"\x18NPC_BEHAVIOR_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11NPC_BEHAVIOR_IDLE\x10\x01\x12\x1b\n" +
	"\x17NPC_BEHAVIOR_PATROLLING\x10\x02\x12\x18\n" +
	"\x14NPC_BEHAVIOR_CHASING\x10\x03\x12\x1a\n" +
	"\x16NPC_BEHAVIOR_ATTACKING\x10\x04\x12\x18\n" +
	"\x14NPC_BEHAVIOR_FLEEING\x10\x05\x12\x1a\n" +
	"\x16NPC_BEHAVIOR_RETURNING\x10\x06\x12\x1c\n" +
	"\x18NPC_BEHAVIOR_INTERACTING\x10\a*\xb6\x02\n" +
	"\fMovementFlag\x12\x16\n" +
	"\x12MOVEMENT_FLAG_NONE\x10\x00\x12\x19\n" +
	"\x15MOVEMENT_FLAG_FORWARD\x10\x01\x12\x1a\n" +
	"\x16MOVEMENT_FLAG_BACKWARD\x10\x02\x12\x16\n" +
	"\x12MOVEMENT_FLAG_LEFT\x10\x04\x12\x17\n" +
	"\x13MOVEMENT_FLAG_RIGHT\x10\b\x12\x19\n" +
	"\x15MOVEMENT_FLAG_JUMPING\x10\x10\x12\x19\n" +
	"\x15MOVEMENT_FLAG_FALLING\x10 \x12\x1a\n" +
	"\x16MOVEMENT_FLAG_SWIMMING\x10@\x12\x19\n" +
	"\x14MOVEMENT_FLAG_FLYING\x10\x80\x01\x12\x1c\n" +
	"\x17MOVEMENT_FLAG_SPRINTING\x10\x80\x02\x12\x1b\n" +
	"\x16MOVEMENT_FLAG_SNEAKING\x10\x80\x04B.Z,github.com/mmorpg-template/backend/pkg/protob\x06proto3"

var (
	file_world_proto_rawDescOnce sync.Once
	file_world_proto_rawDescData []byte
)

func file_world_proto_rawDescGZIP() []byte {
	file_world_proto_rawDescOnce.Do(func() {
		file_world_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_world_proto_rawDesc), len(file_world_proto_rawDesc)))
	})
	return file_world_proto_rawDescData
}

var file_world_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_world_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_world_proto_goTypes = []any{
	(EntityType)(0),               // 0: mmorpg.EntityType
	(DamageType)(0),               // 1: mmorpg.DamageType
	(CombatState)(0),              // 2: mmorpg.CombatState
	(NPCBehaviorState)(0),         // 3: mmorpg.NPCBehaviorState
	(MovementFlag)(0),             // 4: mmorpg.MovementFlag
	(*WorldEnterRequest)(nil),     // 5: mmorpg.WorldEnterRequest
	(*WorldEnterResponse)(nil),    // 6: mmorpg.WorldEnterResponse
	(*WorldLeaveRequest)(nil),     // 7: mmorpg.WorldLeaveRequest
	(*WorldLeaveResponse)(nil),    // 8: mmorpg.WorldLeaveResponse
	(*PlayerPositionUpdate)(nil),  // 9: mmorpg.PlayerPositionUpdate
	(*AreaUpdate)(nil),            // 10: mmorpg.AreaUpdate
	(*PlayerState)(nil),           // 11: mmorpg.PlayerState
	(*NPCState)(nil),              // 12: mmorpg.NPCState
	(*WorldObject)(nil),           // 13: mmorpg.WorldObject
	(*EntitySpawn)(nil),           // 14: mmorpg.EntitySpawn
	(*EntityDespawn)(nil),         // 15: mmorpg.EntityDespawn
	(*EntityEvent)(nil),           // 16: mmorpg.EntityEvent
	(*DamageEvent)(nil),           // 17: mmorpg.DamageEvent
	(*HealEvent)(nil),             // 18: mmorpg.HealEvent
	(*DeathEvent)(nil),            // 19: mmorpg.DeathEvent
	(*LevelUpEvent)(nil),          // 20: mmorpg.LevelUpEvent
	(*EmoteEvent)(nil),            // 21: mmorpg.EmoteEvent
	(*SoundEvent)(nil),            // 22: mmorpg.SoundEvent
	(*VisualEffectEvent)(nil),     // 23: mmorpg.VisualEffectEvent
	(*StatusEffect)(nil),          // 24: mmorpg.StatusEffect
	(*ZoneChangeRequest)(nil),     // 25: mmorpg.ZoneChangeRequest
	(*ZoneChangeResponse)(nil),    // 26: mmorpg.ZoneChangeResponse
	(*InterestUpdateRequest)(nil), // 27: mmorpg.InterestUpdateRequest
	nil,                           // 28: mmorpg.PlayerState.VisibleEquipmentEntry
	nil,                           // 29: mmorpg.WorldObject.PropertiesEntry
	(*Transform)(nil),             // 30: mmorpg.Transform
	(*timestamppb.Timestamp)(nil), // 31: google.protobuf.Timestamp
	(ErrorCode)(0),                // 32: mmorpg.ErrorCode
	(*Vector3)(nil),               // 33: mmorpg.Vector3
	(CharacterClass)(0),           // 34: mmorpg.CharacterClass
}
var file_world_proto_depIdxs = []int32{
	30, // 0: mmorpg.WorldEnterRequest.spawn_transform:type_name -> mmorpg.Transform
	30, // 1: mmorpg.WorldEnterResponse.spawn_transform:type_name -> mmorpg.Transform
	31, // 2: mmorpg.WorldEnterResponse.server_time:type_name -> google.protobuf.Timestamp
	32, // 3: mmorpg.WorldEnterResponse.error_code:type_name -> mmorpg.ErrorCode
	30, // 4: mmorpg.PlayerPositionUpdate.transform:type_name -> mmorpg.Transform
	33, // 5: mmorpg.PlayerPositionUpdate.velocity:type_name -> mmorpg.Vector3
	33, // 6: mmorpg.PlayerPositionUpdate.acceleration:type_name -> mmorpg.Vector3
	31, // 7: mmorpg.PlayerPositionUpdate.timestamp:type_name -> google.protobuf.Timestamp
	11, // 8: mmorpg.AreaUpdate.players:type_name -> mmorpg.PlayerState
	12, // 9: mmorpg.AreaUpdate.npcs:type_name -> mmorpg.NPCState
	13, // 10: mmorpg.AreaUpdate.objects:type_name -> mmorpg.WorldObject
	16, // 11: mmorpg.AreaUpdate.events:type_name -> mmorpg.EntityEvent
	31, // 12: mmorpg.AreaUpdate.server_time:type_name -> google.protobuf.Timestamp
	34, // 13: mmorpg.PlayerState.class:type_name -> mmorpg.CharacterClass
	30, // 14: mmorpg.PlayerState.transform:type_name -> mmorpg.Transform
	33, // 15: mmorpg.PlayerState.velocity:type_name -> mmorpg.Vector3
	24, // 16: mmorpg.PlayerState.status_effects:type_name -> mmorpg.StatusEffect
	2,  // 17: mmorpg.PlayerState.combat_state:type_name -> mmorpg.CombatState
	28, // 18: mmorpg.PlayerState.visible_equipment:type_name -> mmorpg.PlayerState.VisibleEquipmentEntry
	30, // 19: mmorpg.NPCState.transform:type_name -> mmorpg.Transform
	33, // 20: mmorpg.NPCState.velocity:type_name -> mmorpg.Vector3
	3,  // 21: mmorpg.NPCState.behavior_state:type_name -> mmorpg.NPCBehaviorState
	24, // 22: mmorpg.NPCState.status_effects:type_name -> mmorpg.StatusEffect
	30, // 23: mmorpg.WorldObject.transform:type_name -> mmorpg.Transform
	29, // 24: mmorpg.WorldObject.properties:type_name -> mmorpg.WorldObject.PropertiesEntry
	11, // 25: mmorpg.EntitySpawn.player:type_name -> mmorpg.PlayerState
	12, // 26: mmorpg.EntitySpawn.npc:type_name -> mmorpg.NPCState
	13, // 27: mmorpg.EntitySpawn.object:type_name -> mmorpg.WorldObject
	0,  // 28: mmorpg.EntityDespawn.entity_type:type_name -> mmorpg.EntityType
	31, // 29: mmorpg.EntityEvent.timestamp:type_name -> google.protobuf.Timestamp
	17, // 30: mmorpg.EntityEvent.damage:type_name -> mmorpg.DamageEvent
	18, // 31: mmorpg.EntityEvent.heal:type_name -> mmorpg.HealEvent
	19, // 32: mmorpg.EntityEvent.death:type_name -> mmorpg.DeathEvent
	20, // 33: mmorpg.EntityEvent.level_up:type_name -> mmorpg.LevelUpEvent
	21, // 34: mmorpg.EntityEvent.emote:type_name -> mmorpg.EmoteEvent
	22, // 35: mmorpg.EntityEvent.sound:type_name -> mmorpg.SoundEvent
	23, // 36: mmorpg.EntityEvent.visual_effect:type_name -> mmorpg.VisualEffectEvent
	1,  // 37: mmorpg.DamageEvent.damage_type:type_name -> mmorpg.DamageType
	30, // 38: mmorpg.DeathEvent.death_location:type_name -> mmorpg.Transform
	30, // 39: mmorpg.SoundEvent.location:type_name -> mmorpg.Transform
	30, // 40: mmorpg.VisualEffectEvent.location:type_name -> mmorpg.Transform
	30, // 41: mmorpg.ZoneChangeRequest.target_transform:type_name -> mmorpg.Transform
	30, // 42: mmorpg.ZoneChangeResponse.spawn_transform:type_name -> mmorpg.Transform
	32, // 43: mmorpg.ZoneChangeResponse.error_code:type_name -> mmorpg.ErrorCode
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_world_proto_init() }
func file_world_proto_init() {
	if File_world_proto != nil {
		return
	}
	file_base_proto_init()
	file_character_proto_init()
	file_world_proto_msgTypes[9].OneofWrappers = []any{
		(*EntitySpawn_Player)(nil),
		(*EntitySpawn_Npc)(nil),
		(*EntitySpawn_Object)(nil),
	}
	file_world_proto_msgTypes[11].OneofWrappers = []any{
		(*EntityEvent_Damage)(nil),
		(*EntityEvent_Heal)(nil),
		(*EntityEvent_Death)(nil),
		(*EntityEvent_LevelUp)(nil),
		(*EntityEvent_Emote)(nil),
		(*EntityEvent_Sound)(nil),
		(*EntityEvent_VisualEffect)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_world_proto_rawDesc), len(file_world_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_world_proto_goTypes,
		DependencyIndexes: file_world_proto_depIdxs,
		EnumInfos:         file_world_proto_enumTypes,
		MessageInfos:      file_world_proto_msgTypes,
	}.Build()
	File_world_proto = out.File
	file_world_proto_goTypes = nil
	file_world_proto_depIdxs = nil
}
