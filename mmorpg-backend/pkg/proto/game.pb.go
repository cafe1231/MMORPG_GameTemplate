// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: game.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionType int32

const (
	ActionType_ACTION_TYPE_UNSPECIFIED    ActionType = 0
	ActionType_ACTION_TYPE_USE_ITEM       ActionType = 1
	ActionType_ACTION_TYPE_USE_SKILL      ActionType = 2
	ActionType_ACTION_TYPE_INTERACT       ActionType = 3
	ActionType_ACTION_TYPE_LOOT           ActionType = 4
	ActionType_ACTION_TYPE_TRADE          ActionType = 5
	ActionType_ACTION_TYPE_CRAFT          ActionType = 6
	ActionType_ACTION_TYPE_QUEST_ACCEPT   ActionType = 7
	ActionType_ACTION_TYPE_QUEST_COMPLETE ActionType = 8
	ActionType_ACTION_TYPE_QUEST_ABANDON  ActionType = 9
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ACTION_TYPE_UNSPECIFIED",
		1: "ACTION_TYPE_USE_ITEM",
		2: "ACTION_TYPE_USE_SKILL",
		3: "ACTION_TYPE_INTERACT",
		4: "ACTION_TYPE_LOOT",
		5: "ACTION_TYPE_TRADE",
		6: "ACTION_TYPE_CRAFT",
		7: "ACTION_TYPE_QUEST_ACCEPT",
		8: "ACTION_TYPE_QUEST_COMPLETE",
		9: "ACTION_TYPE_QUEST_ABANDON",
	}
	ActionType_value = map[string]int32{
		"ACTION_TYPE_UNSPECIFIED":    0,
		"ACTION_TYPE_USE_ITEM":       1,
		"ACTION_TYPE_USE_SKILL":      2,
		"ACTION_TYPE_INTERACT":       3,
		"ACTION_TYPE_LOOT":           4,
		"ACTION_TYPE_TRADE":          5,
		"ACTION_TYPE_CRAFT":          6,
		"ACTION_TYPE_QUEST_ACCEPT":   7,
		"ACTION_TYPE_QUEST_COMPLETE": 8,
		"ACTION_TYPE_QUEST_ABANDON":  9,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{0}
}

type ItemRarity int32

const (
	ItemRarity_ITEM_RARITY_UNSPECIFIED ItemRarity = 0
	ItemRarity_ITEM_RARITY_COMMON      ItemRarity = 1
	ItemRarity_ITEM_RARITY_UNCOMMON    ItemRarity = 2
	ItemRarity_ITEM_RARITY_RARE        ItemRarity = 3
	ItemRarity_ITEM_RARITY_EPIC        ItemRarity = 4
	ItemRarity_ITEM_RARITY_LEGENDARY   ItemRarity = 5
	ItemRarity_ITEM_RARITY_ARTIFACT    ItemRarity = 6
)

// Enum value maps for ItemRarity.
var (
	ItemRarity_name = map[int32]string{
		0: "ITEM_RARITY_UNSPECIFIED",
		1: "ITEM_RARITY_COMMON",
		2: "ITEM_RARITY_UNCOMMON",
		3: "ITEM_RARITY_RARE",
		4: "ITEM_RARITY_EPIC",
		5: "ITEM_RARITY_LEGENDARY",
		6: "ITEM_RARITY_ARTIFACT",
	}
	ItemRarity_value = map[string]int32{
		"ITEM_RARITY_UNSPECIFIED": 0,
		"ITEM_RARITY_COMMON":      1,
		"ITEM_RARITY_UNCOMMON":    2,
		"ITEM_RARITY_RARE":        3,
		"ITEM_RARITY_EPIC":        4,
		"ITEM_RARITY_LEGENDARY":   5,
		"ITEM_RARITY_ARTIFACT":    6,
	}
)

func (x ItemRarity) Enum() *ItemRarity {
	p := new(ItemRarity)
	*p = x
	return p
}

func (x ItemRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[1].Descriptor()
}

func (ItemRarity) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[1]
}

func (x ItemRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemRarity.Descriptor instead.
func (ItemRarity) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{1}
}

type QuestStatus int32

const (
	QuestStatus_QUEST_STATUS_UNSPECIFIED QuestStatus = 0
	QuestStatus_QUEST_STATUS_AVAILABLE   QuestStatus = 1
	QuestStatus_QUEST_STATUS_ACTIVE      QuestStatus = 2
	QuestStatus_QUEST_STATUS_COMPLETED   QuestStatus = 3
	QuestStatus_QUEST_STATUS_FAILED      QuestStatus = 4
	QuestStatus_QUEST_STATUS_ABANDONED   QuestStatus = 5
)

// Enum value maps for QuestStatus.
var (
	QuestStatus_name = map[int32]string{
		0: "QUEST_STATUS_UNSPECIFIED",
		1: "QUEST_STATUS_AVAILABLE",
		2: "QUEST_STATUS_ACTIVE",
		3: "QUEST_STATUS_COMPLETED",
		4: "QUEST_STATUS_FAILED",
		5: "QUEST_STATUS_ABANDONED",
	}
	QuestStatus_value = map[string]int32{
		"QUEST_STATUS_UNSPECIFIED": 0,
		"QUEST_STATUS_AVAILABLE":   1,
		"QUEST_STATUS_ACTIVE":      2,
		"QUEST_STATUS_COMPLETED":   3,
		"QUEST_STATUS_FAILED":      4,
		"QUEST_STATUS_ABANDONED":   5,
	}
)

func (x QuestStatus) Enum() *QuestStatus {
	p := new(QuestStatus)
	*p = x
	return p
}

func (x QuestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[2].Descriptor()
}

func (QuestStatus) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[2]
}

func (x QuestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestStatus.Descriptor instead.
func (QuestStatus) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{2}
}

type ObjectiveType int32

const (
	ObjectiveType_OBJECTIVE_TYPE_UNSPECIFIED    ObjectiveType = 0
	ObjectiveType_OBJECTIVE_TYPE_KILL           ObjectiveType = 1
	ObjectiveType_OBJECTIVE_TYPE_COLLECT        ObjectiveType = 2
	ObjectiveType_OBJECTIVE_TYPE_INTERACT       ObjectiveType = 3
	ObjectiveType_OBJECTIVE_TYPE_REACH_LOCATION ObjectiveType = 4
	ObjectiveType_OBJECTIVE_TYPE_TALK_TO        ObjectiveType = 5
	ObjectiveType_OBJECTIVE_TYPE_DELIVER        ObjectiveType = 6
	ObjectiveType_OBJECTIVE_TYPE_CRAFT          ObjectiveType = 7
	ObjectiveType_OBJECTIVE_TYPE_USE_SKILL      ObjectiveType = 8
)

// Enum value maps for ObjectiveType.
var (
	ObjectiveType_name = map[int32]string{
		0: "OBJECTIVE_TYPE_UNSPECIFIED",
		1: "OBJECTIVE_TYPE_KILL",
		2: "OBJECTIVE_TYPE_COLLECT",
		3: "OBJECTIVE_TYPE_INTERACT",
		4: "OBJECTIVE_TYPE_REACH_LOCATION",
		5: "OBJECTIVE_TYPE_TALK_TO",
		6: "OBJECTIVE_TYPE_DELIVER",
		7: "OBJECTIVE_TYPE_CRAFT",
		8: "OBJECTIVE_TYPE_USE_SKILL",
	}
	ObjectiveType_value = map[string]int32{
		"OBJECTIVE_TYPE_UNSPECIFIED":    0,
		"OBJECTIVE_TYPE_KILL":           1,
		"OBJECTIVE_TYPE_COLLECT":        2,
		"OBJECTIVE_TYPE_INTERACT":       3,
		"OBJECTIVE_TYPE_REACH_LOCATION": 4,
		"OBJECTIVE_TYPE_TALK_TO":        5,
		"OBJECTIVE_TYPE_DELIVER":        6,
		"OBJECTIVE_TYPE_CRAFT":          7,
		"OBJECTIVE_TYPE_USE_SKILL":      8,
	}
)

func (x ObjectiveType) Enum() *ObjectiveType {
	p := new(ObjectiveType)
	*p = x
	return p
}

func (x ObjectiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[3].Descriptor()
}

func (ObjectiveType) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[3]
}

func (x ObjectiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectiveType.Descriptor instead.
func (ObjectiveType) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{3}
}

type RewardType int32

const (
	RewardType_REWARD_TYPE_UNSPECIFIED RewardType = 0
	RewardType_REWARD_TYPE_EXPERIENCE  RewardType = 1
	RewardType_REWARD_TYPE_GOLD        RewardType = 2
	RewardType_REWARD_TYPE_ITEM        RewardType = 3
	RewardType_REWARD_TYPE_REPUTATION  RewardType = 4
	RewardType_REWARD_TYPE_SKILL_POINT RewardType = 5
	RewardType_REWARD_TYPE_ACHIEVEMENT RewardType = 6
)

// Enum value maps for RewardType.
var (
	RewardType_name = map[int32]string{
		0: "REWARD_TYPE_UNSPECIFIED",
		1: "REWARD_TYPE_EXPERIENCE",
		2: "REWARD_TYPE_GOLD",
		3: "REWARD_TYPE_ITEM",
		4: "REWARD_TYPE_REPUTATION",
		5: "REWARD_TYPE_SKILL_POINT",
		6: "REWARD_TYPE_ACHIEVEMENT",
	}
	RewardType_value = map[string]int32{
		"REWARD_TYPE_UNSPECIFIED": 0,
		"REWARD_TYPE_EXPERIENCE":  1,
		"REWARD_TYPE_GOLD":        2,
		"REWARD_TYPE_ITEM":        3,
		"REWARD_TYPE_REPUTATION":  4,
		"REWARD_TYPE_SKILL_POINT": 5,
		"REWARD_TYPE_ACHIEVEMENT": 6,
	}
)

func (x RewardType) Enum() *RewardType {
	p := new(RewardType)
	*p = x
	return p
}

func (x RewardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[4].Descriptor()
}

func (RewardType) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[4]
}

func (x RewardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardType.Descriptor instead.
func (RewardType) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{4}
}

type CombatActionType int32

const (
	CombatActionType_COMBAT_ACTION_UNSPECIFIED  CombatActionType = 0
	CombatActionType_COMBAT_ACTION_BASIC_ATTACK CombatActionType = 1
	CombatActionType_COMBAT_ACTION_SKILL        CombatActionType = 2
	CombatActionType_COMBAT_ACTION_ITEM         CombatActionType = 3
	CombatActionType_COMBAT_ACTION_DEFEND       CombatActionType = 4
)

// Enum value maps for CombatActionType.
var (
	CombatActionType_name = map[int32]string{
		0: "COMBAT_ACTION_UNSPECIFIED",
		1: "COMBAT_ACTION_BASIC_ATTACK",
		2: "COMBAT_ACTION_SKILL",
		3: "COMBAT_ACTION_ITEM",
		4: "COMBAT_ACTION_DEFEND",
	}
	CombatActionType_value = map[string]int32{
		"COMBAT_ACTION_UNSPECIFIED":  0,
		"COMBAT_ACTION_BASIC_ATTACK": 1,
		"COMBAT_ACTION_SKILL":        2,
		"COMBAT_ACTION_ITEM":         3,
		"COMBAT_ACTION_DEFEND":       4,
	}
)

func (x CombatActionType) Enum() *CombatActionType {
	p := new(CombatActionType)
	*p = x
	return p
}

func (x CombatActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CombatActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[5].Descriptor()
}

func (CombatActionType) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[5]
}

func (x CombatActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CombatActionType.Descriptor instead.
func (CombatActionType) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{5}
}

type CombatEffectType int32

const (
	CombatEffectType_COMBAT_EFFECT_UNSPECIFIED CombatEffectType = 0
	CombatEffectType_COMBAT_EFFECT_DAMAGE      CombatEffectType = 1
	CombatEffectType_COMBAT_EFFECT_HEAL        CombatEffectType = 2
	CombatEffectType_COMBAT_EFFECT_BUFF        CombatEffectType = 3
	CombatEffectType_COMBAT_EFFECT_DEBUFF      CombatEffectType = 4
	CombatEffectType_COMBAT_EFFECT_DOT         CombatEffectType = 5 // Damage over time
	CombatEffectType_COMBAT_EFFECT_HOT         CombatEffectType = 6 // Heal over time
	CombatEffectType_COMBAT_EFFECT_STUN        CombatEffectType = 7
	CombatEffectType_COMBAT_EFFECT_SLOW        CombatEffectType = 8
	CombatEffectType_COMBAT_EFFECT_ROOT        CombatEffectType = 9
	CombatEffectType_COMBAT_EFFECT_SILENCE     CombatEffectType = 10
)

// Enum value maps for CombatEffectType.
var (
	CombatEffectType_name = map[int32]string{
		0:  "COMBAT_EFFECT_UNSPECIFIED",
		1:  "COMBAT_EFFECT_DAMAGE",
		2:  "COMBAT_EFFECT_HEAL",
		3:  "COMBAT_EFFECT_BUFF",
		4:  "COMBAT_EFFECT_DEBUFF",
		5:  "COMBAT_EFFECT_DOT",
		6:  "COMBAT_EFFECT_HOT",
		7:  "COMBAT_EFFECT_STUN",
		8:  "COMBAT_EFFECT_SLOW",
		9:  "COMBAT_EFFECT_ROOT",
		10: "COMBAT_EFFECT_SILENCE",
	}
	CombatEffectType_value = map[string]int32{
		"COMBAT_EFFECT_UNSPECIFIED": 0,
		"COMBAT_EFFECT_DAMAGE":      1,
		"COMBAT_EFFECT_HEAL":        2,
		"COMBAT_EFFECT_BUFF":        3,
		"COMBAT_EFFECT_DEBUFF":      4,
		"COMBAT_EFFECT_DOT":         5,
		"COMBAT_EFFECT_HOT":         6,
		"COMBAT_EFFECT_STUN":        7,
		"COMBAT_EFFECT_SLOW":        8,
		"COMBAT_EFFECT_ROOT":        9,
		"COMBAT_EFFECT_SILENCE":     10,
	}
)

func (x CombatEffectType) Enum() *CombatEffectType {
	p := new(CombatEffectType)
	*p = x
	return p
}

func (x CombatEffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CombatEffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[6].Descriptor()
}

func (CombatEffectType) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[6]
}

func (x CombatEffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CombatEffectType.Descriptor instead.
func (CombatEffectType) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{6}
}

type TradeState int32

const (
	TradeState_TRADE_STATE_UNSPECIFIED TradeState = 0
	TradeState_TRADE_STATE_PENDING     TradeState = 1
	TradeState_TRADE_STATE_ACTIVE      TradeState = 2
	TradeState_TRADE_STATE_COMPLETED   TradeState = 3
	TradeState_TRADE_STATE_CANCELLED   TradeState = 4
)

// Enum value maps for TradeState.
var (
	TradeState_name = map[int32]string{
		0: "TRADE_STATE_UNSPECIFIED",
		1: "TRADE_STATE_PENDING",
		2: "TRADE_STATE_ACTIVE",
		3: "TRADE_STATE_COMPLETED",
		4: "TRADE_STATE_CANCELLED",
	}
	TradeState_value = map[string]int32{
		"TRADE_STATE_UNSPECIFIED": 0,
		"TRADE_STATE_PENDING":     1,
		"TRADE_STATE_ACTIVE":      2,
		"TRADE_STATE_COMPLETED":   3,
		"TRADE_STATE_CANCELLED":   4,
	}
)

func (x TradeState) Enum() *TradeState {
	p := new(TradeState)
	*p = x
	return p
}

func (x TradeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TradeState) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[7].Descriptor()
}

func (TradeState) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[7]
}

func (x TradeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TradeState.Descriptor instead.
func (TradeState) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{7}
}

// Generic action request
type GameActionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ActionType    ActionType             `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3,enum=mmorpg.ActionType" json:"action_type,omitempty"`
	TargetId      string                 `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"` // Target entity ID
	ActionId      string                 `protobuf:"bytes,4,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"` // Specific action/skill/item ID
	Parameters    map[string]string      `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameActionRequest) Reset() {
	*x = GameActionRequest{}
	mi := &file_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionRequest) ProtoMessage() {}

func (x *GameActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionRequest.ProtoReflect.Descriptor instead.
func (*GameActionRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{0}
}

func (x *GameActionRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GameActionRequest) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_ACTION_TYPE_UNSPECIFIED
}

func (x *GameActionRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *GameActionRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *GameActionRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *GameActionRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Generic action response
type GameActionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ActionId      string                 `protobuf:"bytes,2,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ErrorCode     ErrorCode              `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3,enum=mmorpg.ErrorCode" json:"error_code,omitempty"`
	Results       map[string]string      `protobuf:"bytes,5,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameActionResponse) Reset() {
	*x = GameActionResponse{}
	mi := &file_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionResponse) ProtoMessage() {}

func (x *GameActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionResponse.ProtoReflect.Descriptor instead.
func (*GameActionResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{1}
}

func (x *GameActionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GameActionResponse) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *GameActionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GameActionResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (x *GameActionResponse) GetResults() map[string]string {
	if x != nil {
		return x.Results
	}
	return nil
}

// Inventory update
type InventoryUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Slots         []*InventorySlot       `protobuf:"bytes,2,rep,name=slots,proto3" json:"slots,omitempty"`
	TotalSlots    int32                  `protobuf:"varint,3,opt,name=total_slots,json=totalSlots,proto3" json:"total_slots,omitempty"`
	UsedSlots     int32                  `protobuf:"varint,4,opt,name=used_slots,json=usedSlots,proto3" json:"used_slots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryUpdate) Reset() {
	*x = InventoryUpdate{}
	mi := &file_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryUpdate) ProtoMessage() {}

func (x *InventoryUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryUpdate.ProtoReflect.Descriptor instead.
func (*InventoryUpdate) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{2}
}

func (x *InventoryUpdate) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *InventoryUpdate) GetSlots() []*InventorySlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

func (x *InventoryUpdate) GetTotalSlots() int32 {
	if x != nil {
		return x.TotalSlots
	}
	return 0
}

func (x *InventoryUpdate) GetUsedSlots() int32 {
	if x != nil {
		return x.UsedSlots
	}
	return 0
}

// Inventory slot
type InventorySlot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlotIndex     int32                  `protobuf:"varint,1,opt,name=slot_index,json=slotIndex,proto3" json:"slot_index,omitempty"`
	Item          *Item                  `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventorySlot) Reset() {
	*x = InventorySlot{}
	mi := &file_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventorySlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventorySlot) ProtoMessage() {}

func (x *InventorySlot) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventorySlot.ProtoReflect.Descriptor instead.
func (*InventorySlot) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{3}
}

func (x *InventorySlot) GetSlotIndex() int32 {
	if x != nil {
		return x.SlotIndex
	}
	return 0
}

func (x *InventorySlot) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *InventorySlot) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Item definition
type Item struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	ItemId      string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemType    string                 `protobuf:"bytes,2,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	IconId      string                 `protobuf:"bytes,5,opt,name=icon_id,json=iconId,proto3" json:"icon_id,omitempty"`
	Rarity      ItemRarity             `protobuf:"varint,6,opt,name=rarity,proto3,enum=mmorpg.ItemRarity" json:"rarity,omitempty"`
	// Stack info
	MaxStack    int32 `protobuf:"varint,7,opt,name=max_stack,json=maxStack,proto3" json:"max_stack,omitempty"`
	IsUnique    bool  `protobuf:"varint,8,opt,name=is_unique,json=isUnique,proto3" json:"is_unique,omitempty"`
	IsQuestItem bool  `protobuf:"varint,9,opt,name=is_quest_item,json=isQuestItem,proto3" json:"is_quest_item,omitempty"`
	IsBound     bool  `protobuf:"varint,10,opt,name=is_bound,json=isBound,proto3" json:"is_bound,omitempty"`
	// Requirements
	RequiredLevel int32          `protobuf:"varint,11,opt,name=required_level,json=requiredLevel,proto3" json:"required_level,omitempty"`
	RequiredClass CharacterClass `protobuf:"varint,12,opt,name=required_class,json=requiredClass,proto3,enum=mmorpg.CharacterClass" json:"required_class,omitempty"`
	// Stats/Effects
	Stats   map[string]int32 `protobuf:"bytes,13,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Effects []*ItemEffect    `protobuf:"bytes,14,rep,name=effects,proto3" json:"effects,omitempty"`
	// Value
	SellPrice int64 `protobuf:"varint,15,opt,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`
	BuyPrice  int64 `protobuf:"varint,16,opt,name=buy_price,json=buyPrice,proto3" json:"buy_price,omitempty"`
	// Equipment specific
	EquipmentSlot string `protobuf:"bytes,17,opt,name=equipment_slot,json=equipmentSlot,proto3" json:"equipment_slot,omitempty"`
	Durability    int32  `protobuf:"varint,18,opt,name=durability,proto3" json:"durability,omitempty"`
	MaxDurability int32  `protobuf:"varint,19,opt,name=max_durability,json=maxDurability,proto3" json:"max_durability,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{4}
}

func (x *Item) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *Item) GetItemType() string {
	if x != nil {
		return x.ItemType
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Item) GetIconId() string {
	if x != nil {
		return x.IconId
	}
	return ""
}

func (x *Item) GetRarity() ItemRarity {
	if x != nil {
		return x.Rarity
	}
	return ItemRarity_ITEM_RARITY_UNSPECIFIED
}

func (x *Item) GetMaxStack() int32 {
	if x != nil {
		return x.MaxStack
	}
	return 0
}

func (x *Item) GetIsUnique() bool {
	if x != nil {
		return x.IsUnique
	}
	return false
}

func (x *Item) GetIsQuestItem() bool {
	if x != nil {
		return x.IsQuestItem
	}
	return false
}

func (x *Item) GetIsBound() bool {
	if x != nil {
		return x.IsBound
	}
	return false
}

func (x *Item) GetRequiredLevel() int32 {
	if x != nil {
		return x.RequiredLevel
	}
	return 0
}

func (x *Item) GetRequiredClass() CharacterClass {
	if x != nil {
		return x.RequiredClass
	}
	return CharacterClass_CHARACTER_CLASS_UNSPECIFIED
}

func (x *Item) GetStats() map[string]int32 {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Item) GetEffects() []*ItemEffect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *Item) GetSellPrice() int64 {
	if x != nil {
		return x.SellPrice
	}
	return 0
}

func (x *Item) GetBuyPrice() int64 {
	if x != nil {
		return x.BuyPrice
	}
	return 0
}

func (x *Item) GetEquipmentSlot() string {
	if x != nil {
		return x.EquipmentSlot
	}
	return ""
}

func (x *Item) GetDurability() int32 {
	if x != nil {
		return x.Durability
	}
	return 0
}

func (x *Item) GetMaxDurability() int32 {
	if x != nil {
		return x.MaxDurability
	}
	return 0
}

// Item effect
type ItemEffect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EffectType    string                 `protobuf:"bytes,1,opt,name=effect_type,json=effectType,proto3" json:"effect_type,omitempty"`
	Value         int32                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Duration      float32                `protobuf:"fixed32,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Chance        float32                `protobuf:"fixed32,4,opt,name=chance,proto3" json:"chance,omitempty"` // Proc chance
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemEffect) Reset() {
	*x = ItemEffect{}
	mi := &file_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemEffect) ProtoMessage() {}

func (x *ItemEffect) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemEffect.ProtoReflect.Descriptor instead.
func (*ItemEffect) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{5}
}

func (x *ItemEffect) GetEffectType() string {
	if x != nil {
		return x.EffectType
	}
	return ""
}

func (x *ItemEffect) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ItemEffect) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ItemEffect) GetChance() float32 {
	if x != nil {
		return x.Chance
	}
	return 0
}

// Stats update
type StatsUpdate struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	PlayerId              string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Stats                 *CharacterStats        `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	Attributes            *CharacterAttributes   `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Level                 int32                  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Experience            int64                  `protobuf:"varint,5,opt,name=experience,proto3" json:"experience,omitempty"`
	ExperienceToNextLevel int64                  `protobuf:"varint,6,opt,name=experience_to_next_level,json=experienceToNextLevel,proto3" json:"experience_to_next_level,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *StatsUpdate) Reset() {
	*x = StatsUpdate{}
	mi := &file_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsUpdate) ProtoMessage() {}

func (x *StatsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsUpdate.ProtoReflect.Descriptor instead.
func (*StatsUpdate) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{6}
}

func (x *StatsUpdate) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *StatsUpdate) GetStats() *CharacterStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *StatsUpdate) GetAttributes() *CharacterAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *StatsUpdate) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *StatsUpdate) GetExperience() int64 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *StatsUpdate) GetExperienceToNextLevel() int64 {
	if x != nil {
		return x.ExperienceToNextLevel
	}
	return 0
}

// Quest update
type QuestUpdate struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PlayerId          string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ActiveQuests      []*QuestInfo           `protobuf:"bytes,2,rep,name=active_quests,json=activeQuests,proto3" json:"active_quests,omitempty"`
	CompletedQuests   []*QuestInfo           `protobuf:"bytes,3,rep,name=completed_quests,json=completedQuests,proto3" json:"completed_quests,omitempty"`
	AvailableQuestIds []string               `protobuf:"bytes,4,rep,name=available_quest_ids,json=availableQuestIds,proto3" json:"available_quest_ids,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QuestUpdate) Reset() {
	*x = QuestUpdate{}
	mi := &file_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestUpdate) ProtoMessage() {}

func (x *QuestUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestUpdate.ProtoReflect.Descriptor instead.
func (*QuestUpdate) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{7}
}

func (x *QuestUpdate) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *QuestUpdate) GetActiveQuests() []*QuestInfo {
	if x != nil {
		return x.ActiveQuests
	}
	return nil
}

func (x *QuestUpdate) GetCompletedQuests() []*QuestInfo {
	if x != nil {
		return x.CompletedQuests
	}
	return nil
}

func (x *QuestUpdate) GetAvailableQuestIds() []string {
	if x != nil {
		return x.AvailableQuestIds
	}
	return nil
}

// Quest information
type QuestInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	QuestId          string                 `protobuf:"bytes,1,opt,name=quest_id,json=questId,proto3" json:"quest_id,omitempty"`
	QuestName        string                 `protobuf:"bytes,2,opt,name=quest_name,json=questName,proto3" json:"quest_name,omitempty"`
	Description      string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status           QuestStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=mmorpg.QuestStatus" json:"status,omitempty"`
	Objectives       []*QuestObjective      `protobuf:"bytes,5,rep,name=objectives,proto3" json:"objectives,omitempty"`
	Rewards          []*QuestReward         `protobuf:"bytes,6,rep,name=rewards,proto3" json:"rewards,omitempty"`
	RecommendedLevel int32                  `protobuf:"varint,7,opt,name=recommended_level,json=recommendedLevel,proto3" json:"recommended_level,omitempty"`
	IsMainQuest      bool                   `protobuf:"varint,8,opt,name=is_main_quest,json=isMainQuest,proto3" json:"is_main_quest,omitempty"`
	IsDailyQuest     bool                   `protobuf:"varint,9,opt,name=is_daily_quest,json=isDailyQuest,proto3" json:"is_daily_quest,omitempty"`
	AcceptedAt       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=accepted_at,json=acceptedAt,proto3" json:"accepted_at,omitempty"`
	CompletedAt      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QuestInfo) Reset() {
	*x = QuestInfo{}
	mi := &file_game_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestInfo) ProtoMessage() {}

func (x *QuestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestInfo.ProtoReflect.Descriptor instead.
func (*QuestInfo) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{8}
}

func (x *QuestInfo) GetQuestId() string {
	if x != nil {
		return x.QuestId
	}
	return ""
}

func (x *QuestInfo) GetQuestName() string {
	if x != nil {
		return x.QuestName
	}
	return ""
}

func (x *QuestInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QuestInfo) GetStatus() QuestStatus {
	if x != nil {
		return x.Status
	}
	return QuestStatus_QUEST_STATUS_UNSPECIFIED
}

func (x *QuestInfo) GetObjectives() []*QuestObjective {
	if x != nil {
		return x.Objectives
	}
	return nil
}

func (x *QuestInfo) GetRewards() []*QuestReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *QuestInfo) GetRecommendedLevel() int32 {
	if x != nil {
		return x.RecommendedLevel
	}
	return 0
}

func (x *QuestInfo) GetIsMainQuest() bool {
	if x != nil {
		return x.IsMainQuest
	}
	return false
}

func (x *QuestInfo) GetIsDailyQuest() bool {
	if x != nil {
		return x.IsDailyQuest
	}
	return false
}

func (x *QuestInfo) GetAcceptedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcceptedAt
	}
	return nil
}

func (x *QuestInfo) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

// Quest objective
type QuestObjective struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ObjectiveId      string                 `protobuf:"bytes,1,opt,name=objective_id,json=objectiveId,proto3" json:"objective_id,omitempty"`
	Description      string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type             ObjectiveType          `protobuf:"varint,3,opt,name=type,proto3,enum=mmorpg.ObjectiveType" json:"type,omitempty"`
	TargetId         string                 `protobuf:"bytes,4,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	CurrentProgress  int32                  `protobuf:"varint,5,opt,name=current_progress,json=currentProgress,proto3" json:"current_progress,omitempty"`
	RequiredProgress int32                  `protobuf:"varint,6,opt,name=required_progress,json=requiredProgress,proto3" json:"required_progress,omitempty"`
	IsCompleted      bool                   `protobuf:"varint,7,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
	IsOptional       bool                   `protobuf:"varint,8,opt,name=is_optional,json=isOptional,proto3" json:"is_optional,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QuestObjective) Reset() {
	*x = QuestObjective{}
	mi := &file_game_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestObjective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestObjective) ProtoMessage() {}

func (x *QuestObjective) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestObjective.ProtoReflect.Descriptor instead.
func (*QuestObjective) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{9}
}

func (x *QuestObjective) GetObjectiveId() string {
	if x != nil {
		return x.ObjectiveId
	}
	return ""
}

func (x *QuestObjective) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QuestObjective) GetType() ObjectiveType {
	if x != nil {
		return x.Type
	}
	return ObjectiveType_OBJECTIVE_TYPE_UNSPECIFIED
}

func (x *QuestObjective) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *QuestObjective) GetCurrentProgress() int32 {
	if x != nil {
		return x.CurrentProgress
	}
	return 0
}

func (x *QuestObjective) GetRequiredProgress() int32 {
	if x != nil {
		return x.RequiredProgress
	}
	return 0
}

func (x *QuestObjective) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *QuestObjective) GetIsOptional() bool {
	if x != nil {
		return x.IsOptional
	}
	return false
}

// Quest reward
type QuestReward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          RewardType             `protobuf:"varint,1,opt,name=type,proto3,enum=mmorpg.RewardType" json:"type,omitempty"`
	RewardId      string                 `protobuf:"bytes,2,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestReward) Reset() {
	*x = QuestReward{}
	mi := &file_game_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestReward) ProtoMessage() {}

func (x *QuestReward) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestReward.ProtoReflect.Descriptor instead.
func (*QuestReward) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{10}
}

func (x *QuestReward) GetType() RewardType {
	if x != nil {
		return x.Type
	}
	return RewardType_REWARD_TYPE_UNSPECIFIED
}

func (x *QuestReward) GetRewardId() string {
	if x != nil {
		return x.RewardId
	}
	return ""
}

func (x *QuestReward) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Combat action
type CombatAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttackerId    string                 `protobuf:"bytes,1,opt,name=attacker_id,json=attackerId,proto3" json:"attacker_id,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	SkillId       string                 `protobuf:"bytes,3,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	ActionType    CombatActionType       `protobuf:"varint,4,opt,name=action_type,json=actionType,proto3,enum=mmorpg.CombatActionType" json:"action_type,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombatAction) Reset() {
	*x = CombatAction{}
	mi := &file_game_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombatAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatAction) ProtoMessage() {}

func (x *CombatAction) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatAction.ProtoReflect.Descriptor instead.
func (*CombatAction) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{11}
}

func (x *CombatAction) GetAttackerId() string {
	if x != nil {
		return x.AttackerId
	}
	return ""
}

func (x *CombatAction) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *CombatAction) GetSkillId() string {
	if x != nil {
		return x.SkillId
	}
	return ""
}

func (x *CombatAction) GetActionType() CombatActionType {
	if x != nil {
		return x.ActionType
	}
	return CombatActionType_COMBAT_ACTION_UNSPECIFIED
}

func (x *CombatAction) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Combat result
type CombatResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionId      string                 `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Effects       []*CombatEffect        `protobuf:"bytes,3,rep,name=effects,proto3" json:"effects,omitempty"`
	FailureReason string                 `protobuf:"bytes,4,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombatResult) Reset() {
	*x = CombatResult{}
	mi := &file_game_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombatResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatResult) ProtoMessage() {}

func (x *CombatResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatResult.ProtoReflect.Descriptor instead.
func (*CombatResult) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{12}
}

func (x *CombatResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *CombatResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CombatResult) GetEffects() []*CombatEffect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *CombatResult) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

// Combat effect
type CombatEffect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetId      string                 `protobuf:"bytes,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	EffectType    CombatEffectType       `protobuf:"varint,2,opt,name=effect_type,json=effectType,proto3,enum=mmorpg.CombatEffectType" json:"effect_type,omitempty"`
	Value         int32                  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	IsCritical    bool                   `protobuf:"varint,4,opt,name=is_critical,json=isCritical,proto3" json:"is_critical,omitempty"`
	IsBlocked     bool                   `protobuf:"varint,5,opt,name=is_blocked,json=isBlocked,proto3" json:"is_blocked,omitempty"`
	IsDodged      bool                   `protobuf:"varint,6,opt,name=is_dodged,json=isDodged,proto3" json:"is_dodged,omitempty"`
	IsResisted    bool                   `protobuf:"varint,7,opt,name=is_resisted,json=isResisted,proto3" json:"is_resisted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombatEffect) Reset() {
	*x = CombatEffect{}
	mi := &file_game_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombatEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatEffect) ProtoMessage() {}

func (x *CombatEffect) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatEffect.ProtoReflect.Descriptor instead.
func (*CombatEffect) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{13}
}

func (x *CombatEffect) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *CombatEffect) GetEffectType() CombatEffectType {
	if x != nil {
		return x.EffectType
	}
	return CombatEffectType_COMBAT_EFFECT_UNSPECIFIED
}

func (x *CombatEffect) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *CombatEffect) GetIsCritical() bool {
	if x != nil {
		return x.IsCritical
	}
	return false
}

func (x *CombatEffect) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *CombatEffect) GetIsDodged() bool {
	if x != nil {
		return x.IsDodged
	}
	return false
}

func (x *CombatEffect) GetIsResisted() bool {
	if x != nil {
		return x.IsResisted
	}
	return false
}

// Trade request
type TradeRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InitiatorId    string                 `protobuf:"bytes,1,opt,name=initiator_id,json=initiatorId,proto3" json:"initiator_id,omitempty"`
	TargetPlayerId string                 `protobuf:"bytes,2,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TradeRequest) Reset() {
	*x = TradeRequest{}
	mi := &file_game_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeRequest) ProtoMessage() {}

func (x *TradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeRequest.ProtoReflect.Descriptor instead.
func (*TradeRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{14}
}

func (x *TradeRequest) GetInitiatorId() string {
	if x != nil {
		return x.InitiatorId
	}
	return ""
}

func (x *TradeRequest) GetTargetPlayerId() string {
	if x != nil {
		return x.TargetPlayerId
	}
	return ""
}

// Trade update
type TradeUpdate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TradeId        string                 `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	State          TradeState             `protobuf:"varint,2,opt,name=state,proto3,enum=mmorpg.TradeState" json:"state,omitempty"`
	InitiatorOffer *TradeOffer            `protobuf:"bytes,3,opt,name=initiator_offer,json=initiatorOffer,proto3" json:"initiator_offer,omitempty"`
	TargetOffer    *TradeOffer            `protobuf:"bytes,4,opt,name=target_offer,json=targetOffer,proto3" json:"target_offer,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TradeUpdate) Reset() {
	*x = TradeUpdate{}
	mi := &file_game_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeUpdate) ProtoMessage() {}

func (x *TradeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeUpdate.ProtoReflect.Descriptor instead.
func (*TradeUpdate) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15}
}

func (x *TradeUpdate) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *TradeUpdate) GetState() TradeState {
	if x != nil {
		return x.State
	}
	return TradeState_TRADE_STATE_UNSPECIFIED
}

func (x *TradeUpdate) GetInitiatorOffer() *TradeOffer {
	if x != nil {
		return x.InitiatorOffer
	}
	return nil
}

func (x *TradeUpdate) GetTargetOffer() *TradeOffer {
	if x != nil {
		return x.TargetOffer
	}
	return nil
}

// Trade offer
type TradeOffer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Items         []*TradeItem           `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Gold          int64                  `protobuf:"varint,3,opt,name=gold,proto3" json:"gold,omitempty"`
	Locked        bool                   `protobuf:"varint,4,opt,name=locked,proto3" json:"locked,omitempty"`
	Accepted      bool                   `protobuf:"varint,5,opt,name=accepted,proto3" json:"accepted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeOffer) Reset() {
	*x = TradeOffer{}
	mi := &file_game_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeOffer) ProtoMessage() {}

func (x *TradeOffer) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeOffer.ProtoReflect.Descriptor instead.
func (*TradeOffer) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{16}
}

func (x *TradeOffer) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *TradeOffer) GetItems() []*TradeItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *TradeOffer) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *TradeOffer) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *TradeOffer) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

// Trade item
type TradeItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Quantity      int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	InventorySlot int32                  `protobuf:"varint,3,opt,name=inventory_slot,json=inventorySlot,proto3" json:"inventory_slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeItem) Reset() {
	*x = TradeItem{}
	mi := &file_game_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeItem) ProtoMessage() {}

func (x *TradeItem) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeItem.ProtoReflect.Descriptor instead.
func (*TradeItem) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{17}
}

func (x *TradeItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *TradeItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TradeItem) GetInventorySlot() int32 {
	if x != nil {
		return x.InventorySlot
	}
	return 0
}

// Skill/Ability use
type SkillUseRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PlayerId       string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SkillId        string                 `protobuf:"bytes,2,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	TargetId       string                 `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	TargetPosition *Vector3               `protobuf:"bytes,4,opt,name=target_position,json=targetPosition,proto3" json:"target_position,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SkillUseRequest) Reset() {
	*x = SkillUseRequest{}
	mi := &file_game_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SkillUseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillUseRequest) ProtoMessage() {}

func (x *SkillUseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillUseRequest.ProtoReflect.Descriptor instead.
func (*SkillUseRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{18}
}

func (x *SkillUseRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SkillUseRequest) GetSkillId() string {
	if x != nil {
		return x.SkillId
	}
	return ""
}

func (x *SkillUseRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *SkillUseRequest) GetTargetPosition() *Vector3 {
	if x != nil {
		return x.TargetPosition
	}
	return nil
}

// Skill result
type SkillUseResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	SkillId       string                 `protobuf:"bytes,2,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Cooldown      float32                `protobuf:"fixed32,3,opt,name=cooldown,proto3" json:"cooldown,omitempty"`
	FailureReason string                 `protobuf:"bytes,4,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	Effects       []*CombatEffect        `protobuf:"bytes,5,rep,name=effects,proto3" json:"effects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SkillUseResult) Reset() {
	*x = SkillUseResult{}
	mi := &file_game_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SkillUseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillUseResult) ProtoMessage() {}

func (x *SkillUseResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillUseResult.ProtoReflect.Descriptor instead.
func (*SkillUseResult) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{19}
}

func (x *SkillUseResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SkillUseResult) GetSkillId() string {
	if x != nil {
		return x.SkillId
	}
	return ""
}

func (x *SkillUseResult) GetCooldown() float32 {
	if x != nil {
		return x.Cooldown
	}
	return 0
}

func (x *SkillUseResult) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

func (x *SkillUseResult) GetEffects() []*CombatEffect {
	if x != nil {
		return x.Effects
	}
	return nil
}

// Loot
type LootDropped struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EntityId       string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	LootId         string                 `protobuf:"bytes,2,opt,name=loot_id,json=lootId,proto3" json:"loot_id,omitempty"`
	Position       *Vector3               `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Items          []*LootItem            `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	AllowedLooters []string               `protobuf:"bytes,5,rep,name=allowed_looters,json=allowedLooters,proto3" json:"allowed_looters,omitempty"`
	ExpiresAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LootDropped) Reset() {
	*x = LootDropped{}
	mi := &file_game_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LootDropped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootDropped) ProtoMessage() {}

func (x *LootDropped) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootDropped.ProtoReflect.Descriptor instead.
func (*LootDropped) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{20}
}

func (x *LootDropped) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *LootDropped) GetLootId() string {
	if x != nil {
		return x.LootId
	}
	return ""
}

func (x *LootDropped) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *LootDropped) GetItems() []*LootItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LootDropped) GetAllowedLooters() []string {
	if x != nil {
		return x.AllowedLooters
	}
	return nil
}

func (x *LootDropped) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// Loot item
type LootItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *Item                  `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Quantity      int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LootItem) Reset() {
	*x = LootItem{}
	mi := &file_game_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LootItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootItem) ProtoMessage() {}

func (x *LootItem) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootItem.ProtoReflect.Descriptor instead.
func (*LootItem) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{21}
}

func (x *LootItem) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *LootItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Currency update
type CurrencyUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Currencies    map[string]int64       `protobuf:"bytes,2,rep,name=currencies,proto3" json:"currencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // currency_type -> amount
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrencyUpdate) Reset() {
	*x = CurrencyUpdate{}
	mi := &file_game_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrencyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyUpdate) ProtoMessage() {}

func (x *CurrencyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyUpdate.ProtoReflect.Descriptor instead.
func (*CurrencyUpdate) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{22}
}

func (x *CurrencyUpdate) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CurrencyUpdate) GetCurrencies() map[string]int64 {
	if x != nil {
		return x.Currencies
	}
	return nil
}

// Achievement unlocked
type AchievementUnlocked struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlayerId        string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	AchievementId   string                 `protobuf:"bytes,2,opt,name=achievement_id,json=achievementId,proto3" json:"achievement_id,omitempty"`
	AchievementName string                 `protobuf:"bytes,3,opt,name=achievement_name,json=achievementName,proto3" json:"achievement_name,omitempty"`
	Description     string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Points          int32                  `protobuf:"varint,5,opt,name=points,proto3" json:"points,omitempty"`
	UnlockedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=unlocked_at,json=unlockedAt,proto3" json:"unlocked_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AchievementUnlocked) Reset() {
	*x = AchievementUnlocked{}
	mi := &file_game_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AchievementUnlocked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementUnlocked) ProtoMessage() {}

func (x *AchievementUnlocked) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementUnlocked.ProtoReflect.Descriptor instead.
func (*AchievementUnlocked) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{23}
}

func (x *AchievementUnlocked) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *AchievementUnlocked) GetAchievementId() string {
	if x != nil {
		return x.AchievementId
	}
	return ""
}

func (x *AchievementUnlocked) GetAchievementName() string {
	if x != nil {
		return x.AchievementName
	}
	return ""
}

func (x *AchievementUnlocked) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AchievementUnlocked) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *AchievementUnlocked) GetUnlockedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UnlockedAt
	}
	return nil
}

var File_game_proto protoreflect.FileDescriptor

const file_game_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"game.proto\x12\x06mmorpg\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\n" +
	"base.proto\x1a\x0fcharacter.proto\"\xe3\x02\n" +
	"\x11GameActionRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x123\n" +
	"\vaction_type\x18\x02 \x01(\x0e2\x12.mmorpg.ActionTypeR\n" +
	"actionType\x12\x1b\n" +
	"\ttarget_id\x18\x03 \x01(\tR\btargetId\x12\x1b\n" +
	"\taction_id\x18\x04 \x01(\tR\bactionId\x12I\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v2).mmorpg.GameActionRequest.ParametersEntryR\n" +
	"parameters\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x96\x02\n" +
	"\x12GameActionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\taction_id\x18\x02 \x01(\tR\bactionId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x120\n" +
	"\n" +
	"error_code\x18\x04 \x01(\x0e2\x11.mmorpg.ErrorCodeR\terrorCode\x12A\n" +
	"\aresults\x18\x05 \x03(\v2'.mmorpg.GameActionResponse.ResultsEntryR\aresults\x1a:\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9b\x01\n" +
	"\x0fInventoryUpdate\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12+\n" +
	"\x05slots\x18\x02 \x03(\v2\x15.mmorpg.InventorySlotR\x05slots\x12\x1f\n" +
	"\vtotal_slots\x18\x03 \x01(\x05R\n" +
	"totalSlots\x12\x1d\n" +
	"\n" +
	"used_slots\x18\x04 \x01(\x05R\tusedSlots\"l\n" +
	"\rInventorySlot\x12\x1d\n" +
	"\n" +
	"slot_index\x18\x01 \x01(\x05R\tslotIndex\x12 \n" +
	"\x04item\x18\x02 \x01(\v2\f.mmorpg.ItemR\x04item\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\"\xd7\x05\n" +
	"\x04Item\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1b\n" +
	"\titem_type\x18\x02 \x01(\tR\bitemType\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x17\n" +
	"\aicon_id\x18\x05 \x01(\tR\x06iconId\x12*\n" +
	"\x06rarity\x18\x06 \x01(\x0e2\x12.mmorpg.ItemRarityR\x06rarity\x12\x1b\n" +
	"\tmax_stack\x18\a \x01(\x05R\bmaxStack\x12\x1b\n" +
	"\tis_unique\x18\b \x01(\bR\bisUnique\x12\"\n" +
	"\ris_quest_item\x18\t \x01(\bR\visQuestItem\x12\x19\n" +
	"\bis_bound\x18\n" +
	" \x01(\bR\aisBound\x12%\n" +
	"\x0erequired_level\x18\v \x01(\x05R\rrequiredLevel\x12=\n" +
	"\x0erequired_class\x18\f \x01(\x0e2\x16.mmorpg.CharacterClassR\rrequiredClass\x12-\n" +
	"\x05stats\x18\r \x03(\v2\x17.mmorpg.Item.StatsEntryR\x05stats\x12,\n" +
	"\aeffects\x18\x0e \x03(\v2\x12.mmorpg.ItemEffectR\aeffects\x12\x1d\n" +
	"\n" +
	"sell_price\x18\x0f \x01(\x03R\tsellPrice\x12\x1b\n" +
	"\tbuy_price\x18\x10 \x01(\x03R\bbuyPrice\x12%\n" +
	"\x0eequipment_slot\x18\x11 \x01(\tR\requipmentSlot\x12\x1e\n" +
	"\n" +
	"durability\x18\x12 \x01(\x05R\n" +
	"durability\x12%\n" +
	"\x0emax_durability\x18\x13 \x01(\x05R\rmaxDurability\x1a8\n" +
	"\n" +
	"StatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"w\n" +
	"\n" +
	"ItemEffect\x12\x1f\n" +
	"\veffect_type\x18\x01 \x01(\tR\n" +
	"effectType\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x02R\bduration\x12\x16\n" +
	"\x06chance\x18\x04 \x01(\x02R\x06chance\"\x84\x02\n" +
	"\vStatsUpdate\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12,\n" +
	"\x05stats\x18\x02 \x01(\v2\x16.mmorpg.CharacterStatsR\x05stats\x12;\n" +
	"\n" +
	"attributes\x18\x03 \x01(\v2\x1b.mmorpg.CharacterAttributesR\n" +
	"attributes\x12\x14\n" +
	"\x05level\x18\x04 \x01(\x05R\x05level\x12\x1e\n" +
	"\n" +
	"experience\x18\x05 \x01(\x03R\n" +
	"experience\x127\n" +
	"\x18experience_to_next_level\x18\x06 \x01(\x03R\x15experienceToNextLevel\"\xd0\x01\n" +
	"\vQuestUpdate\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x126\n" +
	"\ractive_quests\x18\x02 \x03(\v2\x11.mmorpg.QuestInfoR\factiveQuests\x12<\n" +
	"\x10completed_quests\x18\x03 \x03(\v2\x11.mmorpg.QuestInfoR\x0fcompletedQuests\x12.\n" +
	"\x13available_quest_ids\x18\x04 \x03(\tR\x11availableQuestIds\"\xee\x03\n" +
	"\tQuestInfo\x12\x19\n" +
	"\bquest_id\x18\x01 \x01(\tR\aquestId\x12\x1d\n" +
	"\n" +
	"quest_name\x18\x02 \x01(\tR\tquestName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12+\n" +
	"\x06status\x18\x04 \x01(\x0e2\x13.mmorpg.QuestStatusR\x06status\x126\n" +
	"\n" +
	"objectives\x18\x05 \x03(\v2\x16.mmorpg.QuestObjectiveR\n" +
	"objectives\x12-\n" +
	"\arewards\x18\x06 \x03(\v2\x13.mmorpg.QuestRewardR\arewards\x12+\n" +
	"\x11recommended_level\x18\a \x01(\x05R\x10recommendedLevel\x12\"\n" +
	"\ris_main_quest\x18\b \x01(\bR\visMainQuest\x12$\n" +
	"\x0eis_daily_quest\x18\t \x01(\bR\fisDailyQuest\x12;\n" +
	"\vaccepted_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"acceptedAt\x12=\n" +
	"\fcompleted_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"\xb9\x02\n" +
	"\x0eQuestObjective\x12!\n" +
	"\fobjective_id\x18\x01 \x01(\tR\vobjectiveId\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12)\n" +
	"\x04type\x18\x03 \x01(\x0e2\x15.mmorpg.ObjectiveTypeR\x04type\x12\x1b\n" +
	"\ttarget_id\x18\x04 \x01(\tR\btargetId\x12)\n" +
	"\x10current_progress\x18\x05 \x01(\x05R\x0fcurrentProgress\x12+\n" +
	"\x11required_progress\x18\x06 \x01(\x05R\x10requiredProgress\x12!\n" +
	"\fis_completed\x18\a \x01(\bR\visCompleted\x12\x1f\n" +
	"\vis_optional\x18\b \x01(\bR\n" +
	"isOptional\"n\n" +
	"\vQuestReward\x12&\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.mmorpg.RewardTypeR\x04type\x12\x1b\n" +
	"\treward_id\x18\x02 \x01(\tR\brewardId\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\"\xdc\x01\n" +
	"\fCombatAction\x12\x1f\n" +
	"\vattacker_id\x18\x01 \x01(\tR\n" +
	"attackerId\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\tR\btargetId\x12\x19\n" +
	"\bskill_id\x18\x03 \x01(\tR\askillId\x129\n" +
	"\vaction_type\x18\x04 \x01(\x0e2\x18.mmorpg.CombatActionTypeR\n" +
	"actionType\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x9c\x01\n" +
	"\fCombatResult\x12\x1b\n" +
	"\taction_id\x18\x01 \x01(\tR\bactionId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12.\n" +
	"\aeffects\x18\x03 \x03(\v2\x14.mmorpg.CombatEffectR\aeffects\x12%\n" +
	"\x0efailure_reason\x18\x04 \x01(\tR\rfailureReason\"\xfa\x01\n" +
	"\fCombatEffect\x12\x1b\n" +
	"\ttarget_id\x18\x01 \x01(\tR\btargetId\x129\n" +
	"\veffect_type\x18\x02 \x01(\x0e2\x18.mmorpg.CombatEffectTypeR\n" +
	"effectType\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x05R\x05value\x12\x1f\n" +
	"\vis_critical\x18\x04 \x01(\bR\n" +
	"isCritical\x12\x1d\n" +
	"\n" +
	"is_blocked\x18\x05 \x01(\bR\tisBlocked\x12\x1b\n" +
	"\tis_dodged\x18\x06 \x01(\bR\bisDodged\x12\x1f\n" +
	"\vis_resisted\x18\a \x01(\bR\n" +
	"isResisted\"[\n" +
	"\fTradeRequest\x12!\n" +
	"\finitiator_id\x18\x01 \x01(\tR\vinitiatorId\x12(\n" +
	"\x10target_player_id\x18\x02 \x01(\tR\x0etargetPlayerId\"\xc6\x01\n" +
	"\vTradeUpdate\x12\x19\n" +
	"\btrade_id\x18\x01 \x01(\tR\atradeId\x12(\n" +
	"\x05state\x18\x02 \x01(\x0e2\x12.mmorpg.TradeStateR\x05state\x12;\n" +
	"\x0finitiator_offer\x18\x03 \x01(\v2\x12.mmorpg.TradeOfferR\x0einitiatorOffer\x125\n" +
	"\ftarget_offer\x18\x04 \x01(\v2\x12.mmorpg.TradeOfferR\vtargetOffer\"\x9a\x01\n" +
	"\n" +
	"TradeOffer\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12'\n" +
	"\x05items\x18\x02 \x03(\v2\x11.mmorpg.TradeItemR\x05items\x12\x12\n" +
	"\x04gold\x18\x03 \x01(\x03R\x04gold\x12\x16\n" +
	"\x06locked\x18\x04 \x01(\bR\x06locked\x12\x1a\n" +
	"\baccepted\x18\x05 \x01(\bR\baccepted\"g\n" +
	"\tTradeItem\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x05R\bquantity\x12%\n" +
	"\x0einventory_slot\x18\x03 \x01(\x05R\rinventorySlot\"\xa0\x01\n" +
	"\x0fSkillUseRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bskill_id\x18\x02 \x01(\tR\askillId\x12\x1b\n" +
	"\ttarget_id\x18\x03 \x01(\tR\btargetId\x128\n" +
	"\x0ftarget_position\x18\x04 \x01(\v2\x0f.mmorpg.Vector3R\x0etargetPosition\"\xb8\x01\n" +
	"\x0eSkillUseResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x19\n" +
	"\bskill_id\x18\x02 \x01(\tR\askillId\x12\x1a\n" +
	"\bcooldown\x18\x03 \x01(\x02R\bcooldown\x12%\n" +
	"\x0efailure_reason\x18\x04 \x01(\tR\rfailureReason\x12.\n" +
	"\aeffects\x18\x05 \x03(\v2\x14.mmorpg.CombatEffectR\aeffects\"\xfc\x01\n" +
	"\vLootDropped\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x12\x17\n" +
	"\aloot_id\x18\x02 \x01(\tR\x06lootId\x12+\n" +
	"\bposition\x18\x03 \x01(\v2\x0f.mmorpg.Vector3R\bposition\x12&\n" +
	"\x05items\x18\x04 \x03(\v2\x10.mmorpg.LootItemR\x05items\x12'\n" +
	"\x0fallowed_looters\x18\x05 \x03(\tR\x0eallowedLooters\x129\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"H\n" +
	"\bLootItem\x12 \n" +
	"\x04item\x18\x01 \x01(\v2\f.mmorpg.ItemR\x04item\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x05R\bquantity\"\xb4\x01\n" +
	"\x0eCurrencyUpdate\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12F\n" +
	"\n" +
	"currencies\x18\x02 \x03(\v2&.mmorpg.CurrencyUpdate.CurrenciesEntryR\n" +
	"currencies\x1a=\n" +
	"\x0fCurrenciesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xfb\x01\n" +
	"\x13AchievementUnlocked\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12%\n" +
	"\x0eachievement_id\x18\x02 \x01(\tR\rachievementId\x12)\n" +
	"\x10achievement_name\x18\x03 \x01(\tR\x0fachievementName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x16\n" +
	"\x06points\x18\x05 \x01(\x05R\x06points\x12;\n" +
	"\vunlocked_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"unlockedAt*\x99\x02\n" +
	"\n" +
	"ActionType\x12\x1b\n" +
	"\x17ACTION_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14ACTION_TYPE_USE_ITEM\x10\x01\x12\x19\n" +
	"\x15ACTION_TYPE_USE_SKILL\x10\x02\x12\x18\n" +
	"\x14ACTION_TYPE_INTERACT\x10\x03\x12\x14\n" +
	"\x10ACTION_TYPE_LOOT\x10\x04\x12\x15\n" +
	"\x11ACTION_TYPE_TRADE\x10\x05\x12\x15\n" +
	"\x11ACTION_TYPE_CRAFT\x10\x06\x12\x1c\n" +
	"\x18ACTION_TYPE_QUEST_ACCEPT\x10\a\x12\x1e\n" +
	"\x1aACTION_TYPE_QUEST_COMPLETE\x10\b\x12\x1d\n" +
	"\x19ACTION_TYPE_QUEST_ABANDON\x10\t*\xbc\x01\n" +
	"\n" +
	"ItemRarity\x12\x1b\n" +
	"\x17ITEM_RARITY_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12ITEM_RARITY_COMMON\x10\x01\x12\x18\n" +
	"\x14ITEM_RARITY_UNCOMMON\x10\x02\x12\x14\n" +
	"\x10ITEM_RARITY_RARE\x10\x03\x12\x14\n" +
	"\x10ITEM_RARITY_EPIC\x10\x04\x12\x19\n" +
	"\x15ITEM_RARITY_LEGENDARY\x10\x05\x12\x18\n" +
	"\x14ITEM_RARITY_ARTIFACT\x10\x06*\xb1\x01\n" +
	"\vQuestStatus\x12\x1c\n" +
	"\x18QUEST_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16QUEST_STATUS_AVAILABLE\x10\x01\x12\x17\n" +
	"\x13QUEST_STATUS_ACTIVE\x10\x02\x12\x1a\n" +
	"\x16QUEST_STATUS_COMPLETED\x10\x03\x12\x17\n" +
	"\x13QUEST_STATUS_FAILED\x10\x04\x12\x1a\n" +
	"\x16QUEST_STATUS_ABANDONED\x10\x05*\x94\x02\n" +
	"\rObjectiveType\x12\x1e\n" +
	"\x1aOBJECTIVE_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13OBJECTIVE_TYPE_KILL\x10\x01\x12\x1a\n" +
	"\x16OBJECTIVE_TYPE_COLLECT\x10\x02\x12\x1b\n" +
	"\x17OBJECTIVE_TYPE_INTERACT\x10\x03\x12!\n" +
	"\x1dOBJECTIVE_TYPE_REACH_LOCATION\x10\x04\x12\x1a\n" +
	"\x16OBJECTIVE_TYPE_TALK_TO\x10\x05\x12\x1a\n" +
	"\x16OBJECTIVE_TYPE_DELIVER\x10\x06\x12\x18\n" +
	"\x14OBJECTIVE_TYPE_CRAFT\x10\a\x12\x1c\n" +
	"\x18OBJECTIVE_TYPE_USE_SKILL\x10\b*\xc7\x01\n" +
	"\n" +
	"RewardType\x12\x1b\n" +
	"\x17REWARD_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16REWARD_TYPE_EXPERIENCE\x10\x01\x12\x14\n" +
	"\x10REWARD_TYPE_GOLD\x10\x02\x12\x14\n" +
	"\x10REWARD_TYPE_ITEM\x10\x03\x12\x1a\n" +
	"\x16REWARD_TYPE_REPUTATION\x10\x04\x12\x1b\n" +
	"\x17REWARD_TYPE_SKILL_POINT\x10\x05\x12\x1b\n" +
	"\x17REWARD_TYPE_ACHIEVEMENT\x10\x06*\x9c\x01\n" +
	"\x10CombatActionType\x12\x1d\n" +
	"\x19COMBAT_ACTION_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aCOMBAT_ACTION_BASIC_ATTACK\x10\x01\x12\x17\n" +
	"\x13COMBAT_ACTION_SKILL\x10\x02\x12\x16\n" +
	"\x12COMBAT_ACTION_ITEM\x10\x03\x12\x18\n" +
	"\x14COMBAT_ACTION_DEFEND\x10\x04*\xa6\x02\n" +
	"\x10CombatEffectType\x12\x1d\n" +
	"\x19COMBAT_EFFECT_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14COMBAT_EFFECT_DAMAGE\x10\x01\x12\x16\n" +
	"\x12COMBAT_EFFECT_HEAL\x10\x02\x12\x16\n" +
	"\x12COMBAT_EFFECT_BUFF\x10\x03\x12\x18\n" +
	"\x14COMBAT_EFFECT_DEBUFF\x10\x04\x12\x15\n" +
	"\x11COMBAT_EFFECT_DOT\x10\x05\x12\x15\n" +
	"\x11COMBAT_EFFECT_HOT\x10\x06\x12\x16\n" +
	"\x12COMBAT_EFFECT_STUN\x10\a\x12\x16\n" +
	"\x12COMBAT_EFFECT_SLOW\x10\b\x12\x16\n" +
	"\x12COMBAT_EFFECT_ROOT\x10\t\x12\x19\n" +
	"\x15COMBAT_EFFECT_SILENCE\x10\n" +
	"*\x90\x01\n" +
	"\n" +
	"TradeState\x12\x1b\n" +
	"\x17TRADE_STATE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TRADE_STATE_PENDING\x10\x01\x12\x16\n" +
	"\x12TRADE_STATE_ACTIVE\x10\x02\x12\x19\n" +
	"\x15TRADE_STATE_COMPLETED\x10\x03\x12\x19\n" +
	"\x15TRADE_STATE_CANCELLED\x10\x04B.Z,github.com/mmorpg-template/backend/pkg/protob\x06proto3"

var (
	file_game_proto_rawDescOnce sync.Once
	file_game_proto_rawDescData []byte
)

func file_game_proto_rawDescGZIP() []byte {
	file_game_proto_rawDescOnce.Do(func() {
		file_game_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_game_proto_rawDesc), len(file_game_proto_rawDesc)))
	})
	return file_game_proto_rawDescData
}

var file_game_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_game_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_game_proto_goTypes = []any{
	(ActionType)(0),               // 0: mmorpg.ActionType
	(ItemRarity)(0),               // 1: mmorpg.ItemRarity
	(QuestStatus)(0),              // 2: mmorpg.QuestStatus
	(ObjectiveType)(0),            // 3: mmorpg.ObjectiveType
	(RewardType)(0),               // 4: mmorpg.RewardType
	(CombatActionType)(0),         // 5: mmorpg.CombatActionType
	(CombatEffectType)(0),         // 6: mmorpg.CombatEffectType
	(TradeState)(0),               // 7: mmorpg.TradeState
	(*GameActionRequest)(nil),     // 8: mmorpg.GameActionRequest
	(*GameActionResponse)(nil),    // 9: mmorpg.GameActionResponse
	(*InventoryUpdate)(nil),       // 10: mmorpg.InventoryUpdate
	(*InventorySlot)(nil),         // 11: mmorpg.InventorySlot
	(*Item)(nil),                  // 12: mmorpg.Item
	(*ItemEffect)(nil),            // 13: mmorpg.ItemEffect
	(*StatsUpdate)(nil),           // 14: mmorpg.StatsUpdate
	(*QuestUpdate)(nil),           // 15: mmorpg.QuestUpdate
	(*QuestInfo)(nil),             // 16: mmorpg.QuestInfo
	(*QuestObjective)(nil),        // 17: mmorpg.QuestObjective
	(*QuestReward)(nil),           // 18: mmorpg.QuestReward
	(*CombatAction)(nil),          // 19: mmorpg.CombatAction
	(*CombatResult)(nil),          // 20: mmorpg.CombatResult
	(*CombatEffect)(nil),          // 21: mmorpg.CombatEffect
	(*TradeRequest)(nil),          // 22: mmorpg.TradeRequest
	(*TradeUpdate)(nil),           // 23: mmorpg.TradeUpdate
	(*TradeOffer)(nil),            // 24: mmorpg.TradeOffer
	(*TradeItem)(nil),             // 25: mmorpg.TradeItem
	(*SkillUseRequest)(nil),       // 26: mmorpg.SkillUseRequest
	(*SkillUseResult)(nil),        // 27: mmorpg.SkillUseResult
	(*LootDropped)(nil),           // 28: mmorpg.LootDropped
	(*LootItem)(nil),              // 29: mmorpg.LootItem
	(*CurrencyUpdate)(nil),        // 30: mmorpg.CurrencyUpdate
	(*AchievementUnlocked)(nil),   // 31: mmorpg.AchievementUnlocked
	nil,                           // 32: mmorpg.GameActionRequest.ParametersEntry
	nil,                           // 33: mmorpg.GameActionResponse.ResultsEntry
	nil,                           // 34: mmorpg.Item.StatsEntry
	nil,                           // 35: mmorpg.CurrencyUpdate.CurrenciesEntry
	(*timestamppb.Timestamp)(nil), // 36: google.protobuf.Timestamp
	(ErrorCode)(0),                // 37: mmorpg.ErrorCode
	(CharacterClass)(0),           // 38: mmorpg.CharacterClass
	(*CharacterStats)(nil),        // 39: mmorpg.CharacterStats
	(*CharacterAttributes)(nil),   // 40: mmorpg.CharacterAttributes
	(*Vector3)(nil),               // 41: mmorpg.Vector3
}
var file_game_proto_depIdxs = []int32{
	0,  // 0: mmorpg.GameActionRequest.action_type:type_name -> mmorpg.ActionType
	32, // 1: mmorpg.GameActionRequest.parameters:type_name -> mmorpg.GameActionRequest.ParametersEntry
	36, // 2: mmorpg.GameActionRequest.timestamp:type_name -> google.protobuf.Timestamp
	37, // 3: mmorpg.GameActionResponse.error_code:type_name -> mmorpg.ErrorCode
	33, // 4: mmorpg.GameActionResponse.results:type_name -> mmorpg.GameActionResponse.ResultsEntry
	11, // 5: mmorpg.InventoryUpdate.slots:type_name -> mmorpg.InventorySlot
	12, // 6: mmorpg.InventorySlot.item:type_name -> mmorpg.Item
	1,  // 7: mmorpg.Item.rarity:type_name -> mmorpg.ItemRarity
	38, // 8: mmorpg.Item.required_class:type_name -> mmorpg.CharacterClass
	34, // 9: mmorpg.Item.stats:type_name -> mmorpg.Item.StatsEntry
	13, // 10: mmorpg.Item.effects:type_name -> mmorpg.ItemEffect
	39, // 11: mmorpg.StatsUpdate.stats:type_name -> mmorpg.CharacterStats
	40, // 12: mmorpg.StatsUpdate.attributes:type_name -> mmorpg.CharacterAttributes
	16, // 13: mmorpg.QuestUpdate.active_quests:type_name -> mmorpg.QuestInfo
	16, // 14: mmorpg.QuestUpdate.completed_quests:type_name -> mmorpg.QuestInfo
	2,  // 15: mmorpg.QuestInfo.status:type_name -> mmorpg.QuestStatus
	17, // 16: mmorpg.QuestInfo.objectives:type_name -> mmorpg.QuestObjective
	18, // 17: mmorpg.QuestInfo.rewards:type_name -> mmorpg.QuestReward
	36, // 18: mmorpg.QuestInfo.accepted_at:type_name -> google.protobuf.Timestamp
	36, // 19: mmorpg.QuestInfo.completed_at:type_name -> google.protobuf.Timestamp
	3,  // 20: mmorpg.QuestObjective.type:type_name -> mmorpg.ObjectiveType
	4,  // 21: mmorpg.QuestReward.type:type_name -> mmorpg.RewardType
	5,  // 22: mmorpg.CombatAction.action_type:type_name -> mmorpg.CombatActionType
	36, // 23: mmorpg.CombatAction.timestamp:type_name -> google.protobuf.Timestamp
	21, // 24: mmorpg.CombatResult.effects:type_name -> mmorpg.CombatEffect
	6,  // 25: mmorpg.CombatEffect.effect_type:type_name -> mmorpg.CombatEffectType
	7,  // 26: mmorpg.TradeUpdate.state:type_name -> mmorpg.TradeState
	24, // 27: mmorpg.TradeUpdate.initiator_offer:type_name -> mmorpg.TradeOffer
	24, // 28: mmorpg.TradeUpdate.target_offer:type_name -> mmorpg.TradeOffer
	25, // 29: mmorpg.TradeOffer.items:type_name -> mmorpg.TradeItem
	41, // 30: mmorpg.SkillUseRequest.target_position:type_name -> mmorpg.Vector3
	21, // 31: mmorpg.SkillUseResult.effects:type_name -> mmorpg.CombatEffect
	41, // 32: mmorpg.LootDropped.position:type_name -> mmorpg.Vector3
	29, // 33: mmorpg.LootDropped.items:type_name -> mmorpg.LootItem
	36, // 34: mmorpg.LootDropped.expires_at:type_name -> google.protobuf.Timestamp
	12, // 35: mmorpg.LootItem.item:type_name -> mmorpg.Item
	35, // 36: mmorpg.CurrencyUpdate.currencies:type_name -> mmorpg.CurrencyUpdate.CurrenciesEntry
	36, // 37: mmorpg.AchievementUnlocked.unlocked_at:type_name -> google.protobuf.Timestamp
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_game_proto_init() }
func file_game_proto_init() {
	if File_game_proto != nil {
		return
	}
	file_base_proto_init()
	file_character_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_game_proto_rawDesc), len(file_game_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_game_proto_goTypes,
		DependencyIndexes: file_game_proto_depIdxs,
		EnumInfos:         file_game_proto_enumTypes,
		MessageInfos:      file_game_proto_msgTypes,
	}.Build()
	File_game_proto = out.File
	file_game_proto_goTypes = nil
	file_game_proto_depIdxs = nil
}
