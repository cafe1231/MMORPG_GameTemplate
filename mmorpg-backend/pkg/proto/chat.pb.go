// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: chat.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatChannel int32

const (
	ChatChannel_CHAT_CHANNEL_UNSPECIFIED ChatChannel = 0
	ChatChannel_CHAT_CHANNEL_GLOBAL      ChatChannel = 1  // Server-wide
	ChatChannel_CHAT_CHANNEL_ZONE        ChatChannel = 2  // Current zone
	ChatChannel_CHAT_CHANNEL_LOCAL       ChatChannel = 3  // Proximity based
	ChatChannel_CHAT_CHANNEL_PARTY       ChatChannel = 4  // Party members
	ChatChannel_CHAT_CHANNEL_GUILD       ChatChannel = 5  // Guild members
	ChatChannel_CHAT_CHANNEL_RAID        ChatChannel = 6  // Raid members
	ChatChannel_CHAT_CHANNEL_TRADE       ChatChannel = 7  // Trade channel
	ChatChannel_CHAT_CHANNEL_SYSTEM      ChatChannel = 8  // System messages
	ChatChannel_CHAT_CHANNEL_WHISPER     ChatChannel = 9  // Private messages
	ChatChannel_CHAT_CHANNEL_CUSTOM      ChatChannel = 10 // User-created channels
)

// Enum value maps for ChatChannel.
var (
	ChatChannel_name = map[int32]string{
		0:  "CHAT_CHANNEL_UNSPECIFIED",
		1:  "CHAT_CHANNEL_GLOBAL",
		2:  "CHAT_CHANNEL_ZONE",
		3:  "CHAT_CHANNEL_LOCAL",
		4:  "CHAT_CHANNEL_PARTY",
		5:  "CHAT_CHANNEL_GUILD",
		6:  "CHAT_CHANNEL_RAID",
		7:  "CHAT_CHANNEL_TRADE",
		8:  "CHAT_CHANNEL_SYSTEM",
		9:  "CHAT_CHANNEL_WHISPER",
		10: "CHAT_CHANNEL_CUSTOM",
	}
	ChatChannel_value = map[string]int32{
		"CHAT_CHANNEL_UNSPECIFIED": 0,
		"CHAT_CHANNEL_GLOBAL":      1,
		"CHAT_CHANNEL_ZONE":        2,
		"CHAT_CHANNEL_LOCAL":       3,
		"CHAT_CHANNEL_PARTY":       4,
		"CHAT_CHANNEL_GUILD":       5,
		"CHAT_CHANNEL_RAID":        6,
		"CHAT_CHANNEL_TRADE":       7,
		"CHAT_CHANNEL_SYSTEM":      8,
		"CHAT_CHANNEL_WHISPER":     9,
		"CHAT_CHANNEL_CUSTOM":      10,
	}
)

func (x ChatChannel) Enum() *ChatChannel {
	p := new(ChatChannel)
	*p = x
	return p
}

func (x ChatChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[0].Descriptor()
}

func (ChatChannel) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[0]
}

func (x ChatChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatChannel.Descriptor instead.
func (ChatChannel) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

type ChatMessageType int32

const (
	ChatMessageType_CHAT_MESSAGE_TYPE_UNSPECIFIED  ChatMessageType = 0
	ChatMessageType_CHAT_MESSAGE_TYPE_PLAYER       ChatMessageType = 1
	ChatMessageType_CHAT_MESSAGE_TYPE_SYSTEM       ChatMessageType = 2
	ChatMessageType_CHAT_MESSAGE_TYPE_ANNOUNCEMENT ChatMessageType = 3
	ChatMessageType_CHAT_MESSAGE_TYPE_WARNING      ChatMessageType = 4
	ChatMessageType_CHAT_MESSAGE_TYPE_ERROR        ChatMessageType = 5
	ChatMessageType_CHAT_MESSAGE_TYPE_EMOTE        ChatMessageType = 6
	ChatMessageType_CHAT_MESSAGE_TYPE_ACHIEVEMENT  ChatMessageType = 7
	ChatMessageType_CHAT_MESSAGE_TYPE_LOOT         ChatMessageType = 8
)

// Enum value maps for ChatMessageType.
var (
	ChatMessageType_name = map[int32]string{
		0: "CHAT_MESSAGE_TYPE_UNSPECIFIED",
		1: "CHAT_MESSAGE_TYPE_PLAYER",
		2: "CHAT_MESSAGE_TYPE_SYSTEM",
		3: "CHAT_MESSAGE_TYPE_ANNOUNCEMENT",
		4: "CHAT_MESSAGE_TYPE_WARNING",
		5: "CHAT_MESSAGE_TYPE_ERROR",
		6: "CHAT_MESSAGE_TYPE_EMOTE",
		7: "CHAT_MESSAGE_TYPE_ACHIEVEMENT",
		8: "CHAT_MESSAGE_TYPE_LOOT",
	}
	ChatMessageType_value = map[string]int32{
		"CHAT_MESSAGE_TYPE_UNSPECIFIED":  0,
		"CHAT_MESSAGE_TYPE_PLAYER":       1,
		"CHAT_MESSAGE_TYPE_SYSTEM":       2,
		"CHAT_MESSAGE_TYPE_ANNOUNCEMENT": 3,
		"CHAT_MESSAGE_TYPE_WARNING":      4,
		"CHAT_MESSAGE_TYPE_ERROR":        5,
		"CHAT_MESSAGE_TYPE_EMOTE":        6,
		"CHAT_MESSAGE_TYPE_ACHIEVEMENT":  7,
		"CHAT_MESSAGE_TYPE_LOOT":         8,
	}
)

func (x ChatMessageType) Enum() *ChatMessageType {
	p := new(ChatMessageType)
	*p = x
	return p
}

func (x ChatMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[1].Descriptor()
}

func (ChatMessageType) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[1]
}

func (x ChatMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMessageType.Descriptor instead.
func (ChatMessageType) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

type ChannelRole int32

const (
	ChannelRole_CHANNEL_ROLE_UNSPECIFIED ChannelRole = 0
	ChannelRole_CHANNEL_ROLE_MEMBER      ChannelRole = 1
	ChannelRole_CHANNEL_ROLE_MODERATOR   ChannelRole = 2
	ChannelRole_CHANNEL_ROLE_OWNER       ChannelRole = 3
)

// Enum value maps for ChannelRole.
var (
	ChannelRole_name = map[int32]string{
		0: "CHANNEL_ROLE_UNSPECIFIED",
		1: "CHANNEL_ROLE_MEMBER",
		2: "CHANNEL_ROLE_MODERATOR",
		3: "CHANNEL_ROLE_OWNER",
	}
	ChannelRole_value = map[string]int32{
		"CHANNEL_ROLE_UNSPECIFIED": 0,
		"CHANNEL_ROLE_MEMBER":      1,
		"CHANNEL_ROLE_MODERATOR":   2,
		"CHANNEL_ROLE_OWNER":       3,
	}
)

func (x ChannelRole) Enum() *ChannelRole {
	p := new(ChannelRole)
	*p = x
	return p
}

func (x ChannelRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelRole) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[2].Descriptor()
}

func (ChannelRole) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[2]
}

func (x ChannelRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelRole.Descriptor instead.
func (ChannelRole) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

type ChannelListType int32

const (
	ChannelListType_CHANNEL_LIST_TYPE_UNSPECIFIED ChannelListType = 0
	ChannelListType_CHANNEL_LIST_TYPE_JOINED      ChannelListType = 1
	ChannelListType_CHANNEL_LIST_TYPE_AVAILABLE   ChannelListType = 2
	ChannelListType_CHANNEL_LIST_TYPE_ALL         ChannelListType = 3
)

// Enum value maps for ChannelListType.
var (
	ChannelListType_name = map[int32]string{
		0: "CHANNEL_LIST_TYPE_UNSPECIFIED",
		1: "CHANNEL_LIST_TYPE_JOINED",
		2: "CHANNEL_LIST_TYPE_AVAILABLE",
		3: "CHANNEL_LIST_TYPE_ALL",
	}
	ChannelListType_value = map[string]int32{
		"CHANNEL_LIST_TYPE_UNSPECIFIED": 0,
		"CHANNEL_LIST_TYPE_JOINED":      1,
		"CHANNEL_LIST_TYPE_AVAILABLE":   2,
		"CHANNEL_LIST_TYPE_ALL":         3,
	}
)

func (x ChannelListType) Enum() *ChannelListType {
	p := new(ChannelListType)
	*p = x
	return p
}

func (x ChannelListType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelListType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[3].Descriptor()
}

func (ChannelListType) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[3]
}

func (x ChannelListType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelListType.Descriptor instead.
func (ChannelListType) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

type ChatCommandType int32

const (
	ChatCommandType_CHAT_COMMAND_TYPE_UNSPECIFIED ChatCommandType = 0
	ChatCommandType_CHAT_COMMAND_TYPE_MUTE        ChatCommandType = 1
	ChatCommandType_CHAT_COMMAND_TYPE_UNMUTE      ChatCommandType = 2
	ChatCommandType_CHAT_COMMAND_TYPE_KICK        ChatCommandType = 3
	ChatCommandType_CHAT_COMMAND_TYPE_BAN         ChatCommandType = 4
	ChatCommandType_CHAT_COMMAND_TYPE_UNBAN       ChatCommandType = 5
	ChatCommandType_CHAT_COMMAND_TYPE_PROMOTE     ChatCommandType = 6
	ChatCommandType_CHAT_COMMAND_TYPE_DEMOTE      ChatCommandType = 7
	ChatCommandType_CHAT_COMMAND_TYPE_CLEAR       ChatCommandType = 8
)

// Enum value maps for ChatCommandType.
var (
	ChatCommandType_name = map[int32]string{
		0: "CHAT_COMMAND_TYPE_UNSPECIFIED",
		1: "CHAT_COMMAND_TYPE_MUTE",
		2: "CHAT_COMMAND_TYPE_UNMUTE",
		3: "CHAT_COMMAND_TYPE_KICK",
		4: "CHAT_COMMAND_TYPE_BAN",
		5: "CHAT_COMMAND_TYPE_UNBAN",
		6: "CHAT_COMMAND_TYPE_PROMOTE",
		7: "CHAT_COMMAND_TYPE_DEMOTE",
		8: "CHAT_COMMAND_TYPE_CLEAR",
	}
	ChatCommandType_value = map[string]int32{
		"CHAT_COMMAND_TYPE_UNSPECIFIED": 0,
		"CHAT_COMMAND_TYPE_MUTE":        1,
		"CHAT_COMMAND_TYPE_UNMUTE":      2,
		"CHAT_COMMAND_TYPE_KICK":        3,
		"CHAT_COMMAND_TYPE_BAN":         4,
		"CHAT_COMMAND_TYPE_UNBAN":       5,
		"CHAT_COMMAND_TYPE_PROMOTE":     6,
		"CHAT_COMMAND_TYPE_DEMOTE":      7,
		"CHAT_COMMAND_TYPE_CLEAR":       8,
	}
)

func (x ChatCommandType) Enum() *ChatCommandType {
	p := new(ChatCommandType)
	*p = x
	return p
}

func (x ChatCommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatCommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[4].Descriptor()
}

func (ChatCommandType) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[4]
}

func (x ChatCommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatCommandType.Descriptor instead.
func (ChatCommandType) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

type ReportReason int32

const (
	ReportReason_REPORT_REASON_UNSPECIFIED   ReportReason = 0
	ReportReason_REPORT_REASON_SPAM          ReportReason = 1
	ReportReason_REPORT_REASON_HARASSMENT    ReportReason = 2
	ReportReason_REPORT_REASON_HATE_SPEECH   ReportReason = 3
	ReportReason_REPORT_REASON_INAPPROPRIATE ReportReason = 4
	ReportReason_REPORT_REASON_SCAM          ReportReason = 5
	ReportReason_REPORT_REASON_ADVERTISING   ReportReason = 6
	ReportReason_REPORT_REASON_OTHER         ReportReason = 7
)

// Enum value maps for ReportReason.
var (
	ReportReason_name = map[int32]string{
		0: "REPORT_REASON_UNSPECIFIED",
		1: "REPORT_REASON_SPAM",
		2: "REPORT_REASON_HARASSMENT",
		3: "REPORT_REASON_HATE_SPEECH",
		4: "REPORT_REASON_INAPPROPRIATE",
		5: "REPORT_REASON_SCAM",
		6: "REPORT_REASON_ADVERTISING",
		7: "REPORT_REASON_OTHER",
	}
	ReportReason_value = map[string]int32{
		"REPORT_REASON_UNSPECIFIED":   0,
		"REPORT_REASON_SPAM":          1,
		"REPORT_REASON_HARASSMENT":    2,
		"REPORT_REASON_HATE_SPEECH":   3,
		"REPORT_REASON_INAPPROPRIATE": 4,
		"REPORT_REASON_SCAM":          5,
		"REPORT_REASON_ADVERTISING":   6,
		"REPORT_REASON_OTHER":         7,
	}
)

func (x ReportReason) Enum() *ReportReason {
	p := new(ReportReason)
	*p = x
	return p
}

func (x ReportReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportReason) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[5].Descriptor()
}

func (ReportReason) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[5]
}

func (x ReportReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportReason.Descriptor instead.
func (ReportReason) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

// Chat message
type ChatMessage struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	MessageId  string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	SenderId   string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderName string                 `protobuf:"bytes,3,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	Channel    ChatChannel            `protobuf:"varint,4,opt,name=channel,proto3,enum=mmorpg.ChatChannel" json:"channel,omitempty"`
	ChannelId  string                 `protobuf:"bytes,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"` // For custom channels
	Message    string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Optional fields
	RecipientId      string   `protobuf:"bytes,8,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`       // For whispers
	RecipientName    string   `protobuf:"bytes,9,opt,name=recipient_name,json=recipientName,proto3" json:"recipient_name,omitempty"` // For whispers
	MentionedPlayers []string `protobuf:"bytes,10,rep,name=mentioned_players,json=mentionedPlayers,proto3" json:"mentioned_players,omitempty"`
	// Metadata
	SenderGuild string          `protobuf:"bytes,11,opt,name=sender_guild,json=senderGuild,proto3" json:"sender_guild,omitempty"`
	SenderLevel int32           `protobuf:"varint,12,opt,name=sender_level,json=senderLevel,proto3" json:"sender_level,omitempty"`
	MessageType ChatMessageType `protobuf:"varint,13,opt,name=message_type,json=messageType,proto3,enum=mmorpg.ChatMessageType" json:"message_type,omitempty"`
	// Moderation
	IsFiltered    bool `protobuf:"varint,14,opt,name=is_filtered,json=isFiltered,proto3" json:"is_filtered,omitempty"` // Contains filtered content
	IsReported    bool `protobuf:"varint,15,opt,name=is_reported,json=isReported,proto3" json:"is_reported,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChatMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *ChatMessage) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *ChatMessage) GetChannel() ChatChannel {
	if x != nil {
		return x.Channel
	}
	return ChatChannel_CHAT_CHANNEL_UNSPECIFIED
}

func (x *ChatMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ChatMessage) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *ChatMessage) GetRecipientName() string {
	if x != nil {
		return x.RecipientName
	}
	return ""
}

func (x *ChatMessage) GetMentionedPlayers() []string {
	if x != nil {
		return x.MentionedPlayers
	}
	return nil
}

func (x *ChatMessage) GetSenderGuild() string {
	if x != nil {
		return x.SenderGuild
	}
	return ""
}

func (x *ChatMessage) GetSenderLevel() int32 {
	if x != nil {
		return x.SenderLevel
	}
	return 0
}

func (x *ChatMessage) GetMessageType() ChatMessageType {
	if x != nil {
		return x.MessageType
	}
	return ChatMessageType_CHAT_MESSAGE_TYPE_UNSPECIFIED
}

func (x *ChatMessage) GetIsFiltered() bool {
	if x != nil {
		return x.IsFiltered
	}
	return false
}

func (x *ChatMessage) GetIsReported() bool {
	if x != nil {
		return x.IsReported
	}
	return false
}

// Whisper message
type WhisperMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderName    string                 `protobuf:"bytes,2,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	RecipientId   string                 `protobuf:"bytes,3,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	RecipientName string                 `protobuf:"bytes,4,opt,name=recipient_name,json=recipientName,proto3" json:"recipient_name,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhisperMessage) Reset() {
	*x = WhisperMessage{}
	mi := &file_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhisperMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhisperMessage) ProtoMessage() {}

func (x *WhisperMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhisperMessage.ProtoReflect.Descriptor instead.
func (*WhisperMessage) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *WhisperMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *WhisperMessage) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *WhisperMessage) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *WhisperMessage) GetRecipientName() string {
	if x != nil {
		return x.RecipientName
	}
	return ""
}

func (x *WhisperMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WhisperMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Channel join request
type ChannelJoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Channel       ChatChannel            `protobuf:"varint,2,opt,name=channel,proto3,enum=mmorpg.ChatChannel" json:"channel,omitempty"`
	ChannelId     string                 `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"` // For custom channels
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                    // For password-protected channels
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelJoinRequest) Reset() {
	*x = ChannelJoinRequest{}
	mi := &file_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelJoinRequest) ProtoMessage() {}

func (x *ChannelJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelJoinRequest.ProtoReflect.Descriptor instead.
func (*ChannelJoinRequest) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChannelJoinRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ChannelJoinRequest) GetChannel() ChatChannel {
	if x != nil {
		return x.Channel
	}
	return ChatChannel_CHAT_CHANNEL_UNSPECIFIED
}

func (x *ChannelJoinRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelJoinRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Channel join response
type ChannelJoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Channel       ChatChannel            `protobuf:"varint,2,opt,name=channel,proto3,enum=mmorpg.ChatChannel" json:"channel,omitempty"`
	ChannelId     string                 `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChannelName   string                 `protobuf:"bytes,4,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	Members       []*ChannelMember       `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorCode     ErrorCode              `protobuf:"varint,7,opt,name=error_code,json=errorCode,proto3,enum=mmorpg.ErrorCode" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelJoinResponse) Reset() {
	*x = ChannelJoinResponse{}
	mi := &file_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelJoinResponse) ProtoMessage() {}

func (x *ChannelJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelJoinResponse.ProtoReflect.Descriptor instead.
func (*ChannelJoinResponse) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ChannelJoinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChannelJoinResponse) GetChannel() ChatChannel {
	if x != nil {
		return x.Channel
	}
	return ChatChannel_CHAT_CHANNEL_UNSPECIFIED
}

func (x *ChannelJoinResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelJoinResponse) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ChannelJoinResponse) GetMembers() []*ChannelMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ChannelJoinResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ChannelJoinResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

// Channel leave request
type ChannelLeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Channel       ChatChannel            `protobuf:"varint,2,opt,name=channel,proto3,enum=mmorpg.ChatChannel" json:"channel,omitempty"`
	ChannelId     string                 `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelLeaveRequest) Reset() {
	*x = ChannelLeaveRequest{}
	mi := &file_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelLeaveRequest) ProtoMessage() {}

func (x *ChannelLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelLeaveRequest.ProtoReflect.Descriptor instead.
func (*ChannelLeaveRequest) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ChannelLeaveRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ChannelLeaveRequest) GetChannel() ChatChannel {
	if x != nil {
		return x.Channel
	}
	return ChatChannel_CHAT_CHANNEL_UNSPECIFIED
}

func (x *ChannelLeaveRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

// Channel leave response
type ChannelLeaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelLeaveResponse) Reset() {
	*x = ChannelLeaveResponse{}
	mi := &file_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelLeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelLeaveResponse) ProtoMessage() {}

func (x *ChannelLeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelLeaveResponse.ProtoReflect.Descriptor instead.
func (*ChannelLeaveResponse) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

func (x *ChannelLeaveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChannelLeaveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Channel list request
type ChannelListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ListType      ChannelListType        `protobuf:"varint,2,opt,name=list_type,json=listType,proto3,enum=mmorpg.ChannelListType" json:"list_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelListRequest) Reset() {
	*x = ChannelListRequest{}
	mi := &file_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelListRequest) ProtoMessage() {}

func (x *ChannelListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelListRequest.ProtoReflect.Descriptor instead.
func (*ChannelListRequest) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{6}
}

func (x *ChannelListRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ChannelListRequest) GetListType() ChannelListType {
	if x != nil {
		return x.ListType
	}
	return ChannelListType_CHANNEL_LIST_TYPE_UNSPECIFIED
}

// Channel list response
type ChannelListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []*ChannelInfo         `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelListResponse) Reset() {
	*x = ChannelListResponse{}
	mi := &file_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelListResponse) ProtoMessage() {}

func (x *ChannelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelListResponse.ProtoReflect.Descriptor instead.
func (*ChannelListResponse) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{7}
}

func (x *ChannelListResponse) GetChannels() []*ChannelInfo {
	if x != nil {
		return x.Channels
	}
	return nil
}

// Channel information
type ChannelInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ChannelType         ChatChannel            `protobuf:"varint,1,opt,name=channel_type,json=channelType,proto3,enum=mmorpg.ChatChannel" json:"channel_type,omitempty"`
	ChannelId           string                 `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChannelName         string                 `protobuf:"bytes,3,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	MemberCount         int32                  `protobuf:"varint,4,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	IsJoined            bool                   `protobuf:"varint,5,opt,name=is_joined,json=isJoined,proto3" json:"is_joined,omitempty"`
	IsPasswordProtected bool                   `protobuf:"varint,6,opt,name=is_password_protected,json=isPasswordProtected,proto3" json:"is_password_protected,omitempty"`
	IsModerated         bool                   `protobuf:"varint,7,opt,name=is_moderated,json=isModerated,proto3" json:"is_moderated,omitempty"`
	OwnerId             string                 `protobuf:"bytes,8,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Description         string                 `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ChannelInfo) Reset() {
	*x = ChannelInfo{}
	mi := &file_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInfo) ProtoMessage() {}

func (x *ChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInfo.ProtoReflect.Descriptor instead.
func (*ChannelInfo) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{8}
}

func (x *ChannelInfo) GetChannelType() ChatChannel {
	if x != nil {
		return x.ChannelType
	}
	return ChatChannel_CHAT_CHANNEL_UNSPECIFIED
}

func (x *ChannelInfo) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelInfo) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ChannelInfo) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *ChannelInfo) GetIsJoined() bool {
	if x != nil {
		return x.IsJoined
	}
	return false
}

func (x *ChannelInfo) GetIsPasswordProtected() bool {
	if x != nil {
		return x.IsPasswordProtected
	}
	return false
}

func (x *ChannelInfo) GetIsModerated() bool {
	if x != nil {
		return x.IsModerated
	}
	return false
}

func (x *ChannelInfo) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ChannelInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Channel member
type ChannelMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName    string                 `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Role          ChannelRole            `protobuf:"varint,3,opt,name=role,proto3,enum=mmorpg.ChannelRole" json:"role,omitempty"`
	IsMuted       bool                   `protobuf:"varint,4,opt,name=is_muted,json=isMuted,proto3" json:"is_muted,omitempty"`
	JoinedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMember) Reset() {
	*x = ChannelMember{}
	mi := &file_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMember) ProtoMessage() {}

func (x *ChannelMember) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMember.ProtoReflect.Descriptor instead.
func (*ChannelMember) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{9}
}

func (x *ChannelMember) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ChannelMember) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ChannelMember) GetRole() ChannelRole {
	if x != nil {
		return x.Role
	}
	return ChannelRole_CHANNEL_ROLE_UNSPECIFIED
}

func (x *ChannelMember) GetIsMuted() bool {
	if x != nil {
		return x.IsMuted
	}
	return false
}

func (x *ChannelMember) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

// Chat command (admin/moderator)
type ChatCommand struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IssuerId        string                 `protobuf:"bytes,1,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	CommandType     ChatCommandType        `protobuf:"varint,2,opt,name=command_type,json=commandType,proto3,enum=mmorpg.ChatCommandType" json:"command_type,omitempty"`
	TargetPlayerId  string                 `protobuf:"bytes,3,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"`
	Channel         ChatChannel            `protobuf:"varint,4,opt,name=channel,proto3,enum=mmorpg.ChatChannel" json:"channel,omitempty"`
	ChannelId       string                 `protobuf:"bytes,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	DurationMinutes int32                  `protobuf:"varint,6,opt,name=duration_minutes,json=durationMinutes,proto3" json:"duration_minutes,omitempty"` // For mute/ban
	Reason          string                 `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ChatCommand) Reset() {
	*x = ChatCommand{}
	mi := &file_chat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCommand) ProtoMessage() {}

func (x *ChatCommand) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCommand.ProtoReflect.Descriptor instead.
func (*ChatCommand) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{10}
}

func (x *ChatCommand) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *ChatCommand) GetCommandType() ChatCommandType {
	if x != nil {
		return x.CommandType
	}
	return ChatCommandType_CHAT_COMMAND_TYPE_UNSPECIFIED
}

func (x *ChatCommand) GetTargetPlayerId() string {
	if x != nil {
		return x.TargetPlayerId
	}
	return ""
}

func (x *ChatCommand) GetChannel() ChatChannel {
	if x != nil {
		return x.Channel
	}
	return ChatChannel_CHAT_CHANNEL_UNSPECIFIED
}

func (x *ChatCommand) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChatCommand) GetDurationMinutes() int32 {
	if x != nil {
		return x.DurationMinutes
	}
	return 0
}

func (x *ChatCommand) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Chat command response
type ChatCommandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ErrorCode     ErrorCode              `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3,enum=mmorpg.ErrorCode" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatCommandResponse) Reset() {
	*x = ChatCommandResponse{}
	mi := &file_chat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCommandResponse) ProtoMessage() {}

func (x *ChatCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCommandResponse.ProtoReflect.Descriptor instead.
func (*ChatCommandResponse) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{11}
}

func (x *ChatCommandResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChatCommandResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatCommandResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

// Chat history request
type ChatHistoryRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlayerId        string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Channel         ChatChannel            `protobuf:"varint,2,opt,name=channel,proto3,enum=mmorpg.ChatChannel" json:"channel,omitempty"`
	ChannelId       string                 `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageCount    int32                  `protobuf:"varint,4,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`           // Number of messages to retrieve
	BeforeMessageId string                 `protobuf:"bytes,5,opt,name=before_message_id,json=beforeMessageId,proto3" json:"before_message_id,omitempty"` // For pagination
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ChatHistoryRequest) Reset() {
	*x = ChatHistoryRequest{}
	mi := &file_chat_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHistoryRequest) ProtoMessage() {}

func (x *ChatHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHistoryRequest.ProtoReflect.Descriptor instead.
func (*ChatHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{12}
}

func (x *ChatHistoryRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ChatHistoryRequest) GetChannel() ChatChannel {
	if x != nil {
		return x.Channel
	}
	return ChatChannel_CHAT_CHANNEL_UNSPECIFIED
}

func (x *ChatHistoryRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChatHistoryRequest) GetMessageCount() int32 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *ChatHistoryRequest) GetBeforeMessageId() string {
	if x != nil {
		return x.BeforeMessageId
	}
	return ""
}

// Chat history response
type ChatHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ChatMessage         `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	HasMore       bool                   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatHistoryResponse) Reset() {
	*x = ChatHistoryResponse{}
	mi := &file_chat_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHistoryResponse) ProtoMessage() {}

func (x *ChatHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHistoryResponse.ProtoReflect.Descriptor instead.
func (*ChatHistoryResponse) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{13}
}

func (x *ChatHistoryResponse) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatHistoryResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// Report message
type ReportChatMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ReporterId     string                 `protobuf:"bytes,1,opt,name=reporter_id,json=reporterId,proto3" json:"reporter_id,omitempty"`
	MessageId      string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Reason         ReportReason           `protobuf:"varint,3,opt,name=reason,proto3,enum=mmorpg.ReportReason" json:"reason,omitempty"`
	AdditionalInfo string                 `protobuf:"bytes,4,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReportChatMessage) Reset() {
	*x = ReportChatMessage{}
	mi := &file_chat_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportChatMessage) ProtoMessage() {}

func (x *ReportChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportChatMessage.ProtoReflect.Descriptor instead.
func (*ReportChatMessage) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{14}
}

func (x *ReportChatMessage) GetReporterId() string {
	if x != nil {
		return x.ReporterId
	}
	return ""
}

func (x *ReportChatMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ReportChatMessage) GetReason() ReportReason {
	if x != nil {
		return x.Reason
	}
	return ReportReason_REPORT_REASON_UNSPECIFIED
}

func (x *ReportChatMessage) GetAdditionalInfo() string {
	if x != nil {
		return x.AdditionalInfo
	}
	return ""
}

// Report response
type ReportChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ReportId      string                 `protobuf:"bytes,2,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportChatResponse) Reset() {
	*x = ReportChatResponse{}
	mi := &file_chat_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportChatResponse) ProtoMessage() {}

func (x *ReportChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportChatResponse.ProtoReflect.Descriptor instead.
func (*ReportChatResponse) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{15}
}

func (x *ReportChatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReportChatResponse) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *ReportChatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_chat_proto protoreflect.FileDescriptor

const file_chat_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"chat.proto\x12\x06mmorpg\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\n" +
	"base.proto\"\xc7\x04\n" +
	"\vChatMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12\x1f\n" +
	"\vsender_name\x18\x03 \x01(\tR\n" +
	"senderName\x12-\n" +
	"\achannel\x18\x04 \x01(\x0e2\x13.mmorpg.ChatChannelR\achannel\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x05 \x01(\tR\tchannelId\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12!\n" +
	"\frecipient_id\x18\b \x01(\tR\vrecipientId\x12%\n" +
	"\x0erecipient_name\x18\t \x01(\tR\rrecipientName\x12+\n" +
	"\x11mentioned_players\x18\n" +
	" \x03(\tR\x10mentionedPlayers\x12!\n" +
	"\fsender_guild\x18\v \x01(\tR\vsenderGuild\x12!\n" +
	"\fsender_level\x18\f \x01(\x05R\vsenderLevel\x12:\n" +
	"\fmessage_type\x18\r \x01(\x0e2\x17.mmorpg.ChatMessageTypeR\vmessageType\x12\x1f\n" +
	"\vis_filtered\x18\x0e \x01(\bR\n" +
	"isFiltered\x12\x1f\n" +
	"\vis_reported\x18\x0f \x01(\bR\n" +
	"isReported\"\xec\x01\n" +
	"\x0eWhisperMessage\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12\x1f\n" +
	"\vsender_name\x18\x02 \x01(\tR\n" +
	"senderName\x12!\n" +
	"\frecipient_id\x18\x03 \x01(\tR\vrecipientId\x12%\n" +
	"\x0erecipient_name\x18\x04 \x01(\tR\rrecipientName\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x9b\x01\n" +
	"\x12ChannelJoinRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12-\n" +
	"\achannel\x18\x02 \x01(\x0e2\x13.mmorpg.ChatChannelR\achannel\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x03 \x01(\tR\tchannelId\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\"\xa8\x02\n" +
	"\x13ChannelJoinResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12-\n" +
	"\achannel\x18\x02 \x01(\x0e2\x13.mmorpg.ChatChannelR\achannel\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x03 \x01(\tR\tchannelId\x12!\n" +
	"\fchannel_name\x18\x04 \x01(\tR\vchannelName\x12/\n" +
	"\amembers\x18\x05 \x03(\v2\x15.mmorpg.ChannelMemberR\amembers\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x120\n" +
	"\n" +
	"error_code\x18\a \x01(\x0e2\x11.mmorpg.ErrorCodeR\terrorCode\"\x80\x01\n" +
	"\x13ChannelLeaveRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12-\n" +
	"\achannel\x18\x02 \x01(\x0e2\x13.mmorpg.ChatChannelR\achannel\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x03 \x01(\tR\tchannelId\"J\n" +
	"\x14ChannelLeaveResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"g\n" +
	"\x12ChannelListRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x124\n" +
	"\tlist_type\x18\x02 \x01(\x0e2\x17.mmorpg.ChannelListTypeR\blistType\"F\n" +
	"\x13ChannelListResponse\x12/\n" +
	"\bchannels\x18\x01 \x03(\v2\x13.mmorpg.ChannelInfoR\bchannels\"\xdb\x02\n" +
	"\vChannelInfo\x126\n" +
	"\fchannel_type\x18\x01 \x01(\x0e2\x13.mmorpg.ChatChannelR\vchannelType\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tR\tchannelId\x12!\n" +
	"\fchannel_name\x18\x03 \x01(\tR\vchannelName\x12!\n" +
	"\fmember_count\x18\x04 \x01(\x05R\vmemberCount\x12\x1b\n" +
	"\tis_joined\x18\x05 \x01(\bR\bisJoined\x122\n" +
	"\x15is_password_protected\x18\x06 \x01(\bR\x13isPasswordProtected\x12!\n" +
	"\fis_moderated\x18\a \x01(\bR\visModerated\x12\x19\n" +
	"\bowner_id\x18\b \x01(\tR\aownerId\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription\"\xca\x01\n" +
	"\rChannelMember\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\x12'\n" +
	"\x04role\x18\x03 \x01(\x0e2\x13.mmorpg.ChannelRoleR\x04role\x12\x19\n" +
	"\bis_muted\x18\x04 \x01(\bR\aisMuted\x127\n" +
	"\tjoined_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\bjoinedAt\"\xa1\x02\n" +
	"\vChatCommand\x12\x1b\n" +
	"\tissuer_id\x18\x01 \x01(\tR\bissuerId\x12:\n" +
	"\fcommand_type\x18\x02 \x01(\x0e2\x17.mmorpg.ChatCommandTypeR\vcommandType\x12(\n" +
	"\x10target_player_id\x18\x03 \x01(\tR\x0etargetPlayerId\x12-\n" +
	"\achannel\x18\x04 \x01(\x0e2\x13.mmorpg.ChatChannelR\achannel\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x05 \x01(\tR\tchannelId\x12)\n" +
	"\x10duration_minutes\x18\x06 \x01(\x05R\x0fdurationMinutes\x12\x16\n" +
	"\x06reason\x18\a \x01(\tR\x06reason\"{\n" +
	"\x13ChatCommandResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x120\n" +
	"\n" +
	"error_code\x18\x03 \x01(\x0e2\x11.mmorpg.ErrorCodeR\terrorCode\"\xd0\x01\n" +
	"\x12ChatHistoryRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12-\n" +
	"\achannel\x18\x02 \x01(\x0e2\x13.mmorpg.ChatChannelR\achannel\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x03 \x01(\tR\tchannelId\x12#\n" +
	"\rmessage_count\x18\x04 \x01(\x05R\fmessageCount\x12*\n" +
	"\x11before_message_id\x18\x05 \x01(\tR\x0fbeforeMessageId\"a\n" +
	"\x13ChatHistoryResponse\x12/\n" +
	"\bmessages\x18\x01 \x03(\v2\x13.mmorpg.ChatMessageR\bmessages\x12\x19\n" +
	"\bhas_more\x18\x02 \x01(\bR\ahasMore\"\xaa\x01\n" +
	"\x11ReportChatMessage\x12\x1f\n" +
	"\vreporter_id\x18\x01 \x01(\tR\n" +
	"reporterId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12,\n" +
	"\x06reason\x18\x03 \x01(\x0e2\x14.mmorpg.ReportReasonR\x06reason\x12'\n" +
	"\x0fadditional_info\x18\x04 \x01(\tR\x0eadditionalInfo\"e\n" +
	"\x12ReportChatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\treport_id\x18\x02 \x01(\tR\breportId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage*\x9e\x02\n" +
	"\vChatChannel\x12\x1c\n" +
	"\x18CHAT_CHANNEL_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13CHAT_CHANNEL_GLOBAL\x10\x01\x12\x15\n" +
	"\x11CHAT_CHANNEL_ZONE\x10\x02\x12\x16\n" +
	"\x12CHAT_CHANNEL_LOCAL\x10\x03\x12\x16\n" +
	"\x12CHAT_CHANNEL_PARTY\x10\x04\x12\x16\n" +
	"\x12CHAT_CHANNEL_GUILD\x10\x05\x12\x15\n" +
	"\x11CHAT_CHANNEL_RAID\x10\x06\x12\x16\n" +
	"\x12CHAT_CHANNEL_TRADE\x10\a\x12\x17\n" +
	"\x13CHAT_CHANNEL_SYSTEM\x10\b\x12\x18\n" +
	"\x14CHAT_CHANNEL_WHISPER\x10\t\x12\x17\n" +
	"\x13CHAT_CHANNEL_CUSTOM\x10\n" +
	"*\xac\x02\n" +
	"\x0fChatMessageType\x12!\n" +
	"\x1dCHAT_MESSAGE_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18CHAT_MESSAGE_TYPE_PLAYER\x10\x01\x12\x1c\n" +
	"\x18CHAT_MESSAGE_TYPE_SYSTEM\x10\x02\x12\"\n" +
	"\x1eCHAT_MESSAGE_TYPE_ANNOUNCEMENT\x10\x03\x12\x1d\n" +
	"\x19CHAT_MESSAGE_TYPE_WARNING\x10\x04\x12\x1b\n" +
	"\x17CHAT_MESSAGE_TYPE_ERROR\x10\x05\x12\x1b\n" +
	"\x17CHAT_MESSAGE_TYPE_EMOTE\x10\x06\x12!\n" +
	"\x1dCHAT_MESSAGE_TYPE_ACHIEVEMENT\x10\a\x12\x1a\n" +
	"\x16CHAT_MESSAGE_TYPE_LOOT\x10\b*x\n" +
	"\vChannelRole\x12\x1c\n" +
	"\x18CHANNEL_ROLE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13CHANNEL_ROLE_MEMBER\x10\x01\x12\x1a\n" +
	"\x16CHANNEL_ROLE_MODERATOR\x10\x02\x12\x16\n" +
	"\x12CHANNEL_ROLE_OWNER\x10\x03*\x8e\x01\n" +
	"\x0fChannelListType\x12!\n" +
	"\x1dCHANNEL_LIST_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18CHANNEL_LIST_TYPE_JOINED\x10\x01\x12\x1f\n" +
	"\x1bCHANNEL_LIST_TYPE_AVAILABLE\x10\x02\x12\x19\n" +
	"\x15CHANNEL_LIST_TYPE_ALL\x10\x03*\x9c\x02\n" +
	"\x0fChatCommandType\x12!\n" +
	"\x1dCHAT_COMMAND_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16CHAT_COMMAND_TYPE_MUTE\x10\x01\x12\x1c\n" +
	"\x18CHAT_COMMAND_TYPE_UNMUTE\x10\x02\x12\x1a\n" +
	"\x16CHAT_COMMAND_TYPE_KICK\x10\x03\x12\x19\n" +
	"\x15CHAT_COMMAND_TYPE_BAN\x10\x04\x12\x1b\n" +
	"\x17CHAT_COMMAND_TYPE_UNBAN\x10\x05\x12\x1d\n" +
	"\x19CHAT_COMMAND_TYPE_PROMOTE\x10\x06\x12\x1c\n" +
	"\x18CHAT_COMMAND_TYPE_DEMOTE\x10\a\x12\x1b\n" +
	"\x17CHAT_COMMAND_TYPE_CLEAR\x10\b*\xf3\x01\n" +
	"\fReportReason\x12\x1d\n" +
	"\x19REPORT_REASON_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12REPORT_REASON_SPAM\x10\x01\x12\x1c\n" +
	"\x18REPORT_REASON_HARASSMENT\x10\x02\x12\x1d\n" +
	"\x19REPORT_REASON_HATE_SPEECH\x10\x03\x12\x1f\n" +
	"\x1bREPORT_REASON_INAPPROPRIATE\x10\x04\x12\x16\n" +
	"\x12REPORT_REASON_SCAM\x10\x05\x12\x1d\n" +
	"\x19REPORT_REASON_ADVERTISING\x10\x06\x12\x17\n" +
	"\x13REPORT_REASON_OTHER\x10\aB.Z,github.com/mmorpg-template/backend/pkg/protob\x06proto3"

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData []byte
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_proto_rawDesc), len(file_chat_proto_rawDesc)))
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_chat_proto_goTypes = []any{
	(ChatChannel)(0),              // 0: mmorpg.ChatChannel
	(ChatMessageType)(0),          // 1: mmorpg.ChatMessageType
	(ChannelRole)(0),              // 2: mmorpg.ChannelRole
	(ChannelListType)(0),          // 3: mmorpg.ChannelListType
	(ChatCommandType)(0),          // 4: mmorpg.ChatCommandType
	(ReportReason)(0),             // 5: mmorpg.ReportReason
	(*ChatMessage)(nil),           // 6: mmorpg.ChatMessage
	(*WhisperMessage)(nil),        // 7: mmorpg.WhisperMessage
	(*ChannelJoinRequest)(nil),    // 8: mmorpg.ChannelJoinRequest
	(*ChannelJoinResponse)(nil),   // 9: mmorpg.ChannelJoinResponse
	(*ChannelLeaveRequest)(nil),   // 10: mmorpg.ChannelLeaveRequest
	(*ChannelLeaveResponse)(nil),  // 11: mmorpg.ChannelLeaveResponse
	(*ChannelListRequest)(nil),    // 12: mmorpg.ChannelListRequest
	(*ChannelListResponse)(nil),   // 13: mmorpg.ChannelListResponse
	(*ChannelInfo)(nil),           // 14: mmorpg.ChannelInfo
	(*ChannelMember)(nil),         // 15: mmorpg.ChannelMember
	(*ChatCommand)(nil),           // 16: mmorpg.ChatCommand
	(*ChatCommandResponse)(nil),   // 17: mmorpg.ChatCommandResponse
	(*ChatHistoryRequest)(nil),    // 18: mmorpg.ChatHistoryRequest
	(*ChatHistoryResponse)(nil),   // 19: mmorpg.ChatHistoryResponse
	(*ReportChatMessage)(nil),     // 20: mmorpg.ReportChatMessage
	(*ReportChatResponse)(nil),    // 21: mmorpg.ReportChatResponse
	(*timestamppb.Timestamp)(nil), // 22: google.protobuf.Timestamp
	(ErrorCode)(0),                // 23: mmorpg.ErrorCode
}
var file_chat_proto_depIdxs = []int32{
	0,  // 0: mmorpg.ChatMessage.channel:type_name -> mmorpg.ChatChannel
	22, // 1: mmorpg.ChatMessage.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 2: mmorpg.ChatMessage.message_type:type_name -> mmorpg.ChatMessageType
	22, // 3: mmorpg.WhisperMessage.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 4: mmorpg.ChannelJoinRequest.channel:type_name -> mmorpg.ChatChannel
	0,  // 5: mmorpg.ChannelJoinResponse.channel:type_name -> mmorpg.ChatChannel
	15, // 6: mmorpg.ChannelJoinResponse.members:type_name -> mmorpg.ChannelMember
	23, // 7: mmorpg.ChannelJoinResponse.error_code:type_name -> mmorpg.ErrorCode
	0,  // 8: mmorpg.ChannelLeaveRequest.channel:type_name -> mmorpg.ChatChannel
	3,  // 9: mmorpg.ChannelListRequest.list_type:type_name -> mmorpg.ChannelListType
	14, // 10: mmorpg.ChannelListResponse.channels:type_name -> mmorpg.ChannelInfo
	0,  // 11: mmorpg.ChannelInfo.channel_type:type_name -> mmorpg.ChatChannel
	2,  // 12: mmorpg.ChannelMember.role:type_name -> mmorpg.ChannelRole
	22, // 13: mmorpg.ChannelMember.joined_at:type_name -> google.protobuf.Timestamp
	4,  // 14: mmorpg.ChatCommand.command_type:type_name -> mmorpg.ChatCommandType
	0,  // 15: mmorpg.ChatCommand.channel:type_name -> mmorpg.ChatChannel
	23, // 16: mmorpg.ChatCommandResponse.error_code:type_name -> mmorpg.ErrorCode
	0,  // 17: mmorpg.ChatHistoryRequest.channel:type_name -> mmorpg.ChatChannel
	6,  // 18: mmorpg.ChatHistoryResponse.messages:type_name -> mmorpg.ChatMessage
	5,  // 19: mmorpg.ReportChatMessage.reason:type_name -> mmorpg.ReportReason
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	file_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_proto_rawDesc), len(file_chat_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		EnumInfos:         file_chat_proto_enumTypes,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}
